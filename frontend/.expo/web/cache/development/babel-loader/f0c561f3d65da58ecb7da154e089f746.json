{
	"ast": null,
	"code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button } from 'react-native-paper';\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\nimport baseUrl from \"../../assets/constants/BaseUrl\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction Details(props) {\n  var data = props.route.params.data;\n\n  var handleDelete = function handleDelete(item) {\n    return _regeneratorRuntime.async(function handleDelete$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            props.deleteVenues(item.id);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(ScrollView, {\n    children: [_jsxs(View, {\n      children: [_jsxs(Text, {\n        children: [\" \", data.item.name]\n      }), _jsxs(Text, {\n        children: [\" \", data.item.description]\n      }), _jsxs(Text, {\n        children: [\" \", data.item.created_at]\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(Button, {\n        icon: \"update\",\n        mode: \"contained\",\n        onPress: function onPress() {\n          return props.navigation.navigate('Edit', {\n            data: data\n          });\n        },\n        children: \"Edit Venue\"\n      }), _jsx(Button, {\n        icon: \"delete\",\n        mode: \"contained\",\n        onPress: function onPress() {\n          return handleDelete(props.route.params.data.item);\n        },\n        children: \"Delete Venue\"\n      })]\n    })]\n  });\n}\n\nvar deleteVenue = function deleteVenue(id) {\n  return function _callee(dispatch) {\n    var res;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios.delete(baseUrl + \"/venue/delete/\" + id));\n\n          case 2:\n            res = _context2.sent;\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar mapState = function mapState(state) {\n  return {};\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    deleteVenues: function deleteVenues(id) {\n      dispatch(deleteVenue(id));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Details);",
	"map": {
		"version": 3,
		"sources": [
			"/Users/llh/Documents/map/frontend/screens/report-staff-trial/Details.js"
		],
		"names": [
			"React",
			"Button",
			"connect",
			"axios",
			"baseUrl",
			"Details",
			"props",
			"data",
			"route",
			"params",
			"handleDelete",
			"item",
			"deleteVenues",
			"id",
			"name",
			"description",
			"created_at",
			"navigation",
			"navigate",
			"deleteVenue",
			"dispatch",
			"delete",
			"res",
			"mapState",
			"state",
			"mapDispatch"
		],
		"mappings": ";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP;;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACvB,MAAMC,IAAI,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,IAAhC;;AAEA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AACpBL,YAAAA,KAAK,CAACM,YAAN,CAAmBD,IAAI,CAACE,EAAxB;;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAIA,SACC,MAAC,UAAD;AAAA,eACC,MAAC,IAAD;AAAA,iBACC,MAAC,IAAD;AAAA,wBAAQN,IAAI,CAACI,IAAL,CAAUG,IAAlB;AAAA,QADD,EAEC,MAAC,IAAD;AAAA,wBAAQP,IAAI,CAACI,IAAL,CAAUI,WAAlB;AAAA,QAFD,EAGC,MAAC,IAAD;AAAA,wBAAQR,IAAI,CAACI,IAAL,CAAUK,UAAlB;AAAA,QAHD;AAAA,MADD,EAMC,MAAC,IAAD;AAAA,iBACC,KAAC,MAAD;AACC,QAAA,IAAI,EAAC,QADN;AAEC,QAAA,IAAI,EAAC,WAFN;AAGC,QAAA,OAAO,EAAE;AAAA,iBAAMV,KAAK,CAACW,UAAN,CAAiBC,QAAjB,CAA0B,MAA1B,EAAkC;AAAEX,YAAAA,IAAI,EAAEA;AAAR,WAAlC,CAAN;AAAA,SAHV;AAAA;AAAA,QADD,EAOC,KAAC,MAAD;AACC,QAAA,IAAI,EAAC,QADN;AAEC,QAAA,IAAI,EAAC,WAFN;AAGC,QAAA,OAAO,EAAE;AAAA,iBAAMG,YAAY,CAACJ,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,IAAnB,CAAwBI,IAAzB,CAAlB;AAAA,SAHV;AAAA;AAAA,QAPD;AAAA,MAND;AAAA,IADD;AAuBA;;AAED,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACN,EAAD;AAAA,SAAQ,iBAAMO,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACTjB,KAAK,CAACkB,MAAN,CAAgBjB,OAAhB,sBAAwCS,EAAxC,CADS;;AAAA;AACrBS,YAAAA,GADqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAR;AAAA,CAApB;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC3B,SAAO,EAAP;AAEA,CAHD;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACL,QAAD,EAAc;AACjC,SAAO;AACNR,IAAAA,YADM,wBACOC,EADP,EACW;AAChBO,MAAAA,QAAQ,CAACD,WAAW,CAACN,EAAD,CAAZ,CAAR;AACA;AAHK,GAAP;AAKA,CAND;;AAQA,eAAeX,OAAO,CAACqB,QAAD,EAAWE,WAAX,CAAP,CAA+BpB,OAA/B,CAAf",
		"sourcesContent": [
			"import React from 'react';\nimport { View, ScrollView, Text } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\nimport baseUrl from '../../assets/constants/BaseUrl'\n\nfunction Details(props) {\n\tconst data = props.route.params.data;\n\n\tconst handleDelete = async (item) => {\n\t\tprops.deleteVenues(item.id)\n\t}\n\n\treturn (\n\t\t<ScrollView>\n\t\t\t<View>\n\t\t\t\t<Text> {data.item.name}</Text>\n\t\t\t\t<Text> {data.item.description}</Text>\n\t\t\t\t<Text> {data.item.created_at}</Text>\n\t\t\t</View>\n\t\t\t<View>\n\t\t\t\t<Button\n\t\t\t\t\ticon=\"update\"\n\t\t\t\t\tmode=\"contained\"\n\t\t\t\t\tonPress={() => props.navigation.navigate('Edit', { data: data })}>\n\t\t\t\t\tEdit Venue\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\ticon=\"delete\"\n\t\t\t\t\tmode=\"contained\"\n\t\t\t\t\tonPress={() => handleDelete(props.route.params.data.item)}>\n\t\t\t\t\tDelete Venue\n\t\t\t\t</Button>\n\t\t\t</View>\n\t\t</ScrollView>\n\t)\n}\n\nconst deleteVenue = (id) => async dispatch => {\n\tconst res = await axios.delete(`${baseUrl}/venue/delete/${id}`)\n};\n\nconst mapState = (state) => {\n\treturn {\n\t}\n}\n\nconst mapDispatch = (dispatch) => {\n\treturn {\n\t\tdeleteVenues(id) {\n\t\t\tdispatch(deleteVenue(id))\n\t\t},\n\t}\n}\n\nexport default connect(mapState, mapDispatch)(Details)"
		]
	},
	"metadata": {},
	"sourceType": "module"
}
