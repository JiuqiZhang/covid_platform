{
	"ast": null,
	"code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useMemo, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport htmlContent from \"./h5/html\";\nimport injectedSignaturePad from \"./h5/js/signature_pad\";\nimport injectedApplication from \"./h5/js/app\";\nimport { WebView } from \"react-native-webview\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  webBg: {\n    width: \"100%\",\n    backgroundColor: \"#FFF\",\n    flex: 1\n  },\n  loadingOverlayContainer: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nvar SignatureView = forwardRef(function (_ref, ref) {\n  var _ref$androidHardwareA = _ref.androidHardwareAccelerationDisabled,\n      androidHardwareAccelerationDisabled = _ref$androidHardwareA === void 0 ? false : _ref$androidHardwareA,\n      _ref$autoClear = _ref.autoClear,\n      autoClear = _ref$autoClear === void 0 ? false : _ref$autoClear,\n      _ref$backgroundColor = _ref.backgroundColor,\n      backgroundColor = _ref$backgroundColor === void 0 ? \"\" : _ref$backgroundColor,\n      _ref$bgHeight = _ref.bgHeight,\n      bgHeight = _ref$bgHeight === void 0 ? 0 : _ref$bgHeight,\n      _ref$bgWidth = _ref.bgWidth,\n      bgWidth = _ref$bgWidth === void 0 ? 0 : _ref$bgWidth,\n      _ref$bgSrc = _ref.bgSrc,\n      bgSrc = _ref$bgSrc === void 0 ? null : _ref$bgSrc,\n      _ref$clearText = _ref.clearText,\n      clearText = _ref$clearText === void 0 ? \"Clear\" : _ref$clearText,\n      _ref$confirmText = _ref.confirmText,\n      confirmText = _ref$confirmText === void 0 ? \"Confirm\" : _ref$confirmText,\n      _ref$customHtml = _ref.customHtml,\n      customHtml = _ref$customHtml === void 0 ? null : _ref$customHtml,\n      _ref$dataURL = _ref.dataURL,\n      dataURL = _ref$dataURL === void 0 ? \"\" : _ref$dataURL,\n      _ref$descriptionText = _ref.descriptionText,\n      descriptionText = _ref$descriptionText === void 0 ? \"Sign above\" : _ref$descriptionText,\n      _ref$dotSize = _ref.dotSize,\n      dotSize = _ref$dotSize === void 0 ? null : _ref$dotSize,\n      _ref$imageType = _ref.imageType,\n      imageType = _ref$imageType === void 0 ? \"\" : _ref$imageType,\n      _ref$minWidth = _ref.minWidth,\n      minWidth = _ref$minWidth === void 0 ? 0.5 : _ref$minWidth,\n      _ref$maxWidth = _ref.maxWidth,\n      maxWidth = _ref$maxWidth === void 0 ? 2.5 : _ref$maxWidth,\n      _ref$onOK = _ref.onOK,\n      onOK = _ref$onOK === void 0 ? function () {} : _ref$onOK,\n      _ref$onEmpty = _ref.onEmpty,\n      onEmpty = _ref$onEmpty === void 0 ? function () {} : _ref$onEmpty,\n      _ref$onClear = _ref.onClear,\n      onClear = _ref$onClear === void 0 ? function () {} : _ref$onClear,\n      _ref$onUndo = _ref.onUndo,\n      onUndo = _ref$onUndo === void 0 ? function () {} : _ref$onUndo,\n      _ref$onRedo = _ref.onRedo,\n      onRedo = _ref$onRedo === void 0 ? function () {} : _ref$onRedo,\n      _ref$onDraw = _ref.onDraw,\n      onDraw = _ref$onDraw === void 0 ? function () {} : _ref$onDraw,\n      _ref$onErase = _ref.onErase,\n      onErase = _ref$onErase === void 0 ? function () {} : _ref$onErase,\n      _ref$onGetData = _ref.onGetData,\n      onGetData = _ref$onGetData === void 0 ? function () {} : _ref$onGetData,\n      _ref$onChangePenColor = _ref.onChangePenColor,\n      onChangePenColor = _ref$onChangePenColor === void 0 ? function () {} : _ref$onChangePenColor,\n      _ref$onChangePenSize = _ref.onChangePenSize,\n      onChangePenSize = _ref$onChangePenSize === void 0 ? function () {} : _ref$onChangePenSize,\n      _ref$onBegin = _ref.onBegin,\n      onBegin = _ref$onBegin === void 0 ? function () {} : _ref$onBegin,\n      _ref$onEnd = _ref.onEnd,\n      onEnd = _ref$onEnd === void 0 ? function () {} : _ref$onEnd,\n      _ref$overlayHeight = _ref.overlayHeight,\n      overlayHeight = _ref$overlayHeight === void 0 ? 0 : _ref$overlayHeight,\n      _ref$overlayWidth = _ref.overlayWidth,\n      overlayWidth = _ref$overlayWidth === void 0 ? 0 : _ref$overlayWidth,\n      _ref$overlaySrc = _ref.overlaySrc,\n      overlaySrc = _ref$overlaySrc === void 0 ? null : _ref$overlaySrc,\n      _ref$penColor = _ref.penColor,\n      penColor = _ref$penColor === void 0 ? \"\" : _ref$penColor,\n      _ref$rotated = _ref.rotated,\n      rotated = _ref$rotated === void 0 ? false : _ref$rotated,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? null : _ref$style,\n      _ref$scrollable = _ref.scrollable,\n      scrollable = _ref$scrollable === void 0 ? false : _ref$scrollable,\n      _ref$trimWhitespace = _ref.trimWhitespace,\n      trimWhitespace = _ref$trimWhitespace === void 0 ? false : _ref$trimWhitespace,\n      _ref$webStyle = _ref.webStyle,\n      webStyle = _ref$webStyle === void 0 ? \"\" : _ref$webStyle,\n      _ref$webviewContainer = _ref.webviewContainerStyle,\n      webviewContainerStyle = _ref$webviewContainer === void 0 ? null : _ref$webviewContainer;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var webViewRef = useRef();\n  var source = useMemo(function () {\n    var injectedJavaScript = injectedSignaturePad + injectedApplication;\n    var htmlContentValue = customHtml ? customHtml : htmlContent;\n    injectedJavaScript = injectedJavaScript.replace(/<%autoClear%>/g, autoClear);\n    injectedJavaScript = injectedJavaScript.replace(/<%trimWhitespace%>/g, trimWhitespace);\n    injectedJavaScript = injectedJavaScript.replace(/<%imageType%>/g, imageType);\n    injectedJavaScript = injectedJavaScript.replace(/<%dataURL%>/g, dataURL);\n    injectedJavaScript = injectedJavaScript.replace(/<%penColor%>/g, penColor);\n    injectedJavaScript = injectedJavaScript.replace(/<%backgroundColor%>/g, backgroundColor);\n    injectedJavaScript = injectedJavaScript.replace(/<%dotSize%>/g, dotSize);\n    injectedJavaScript = injectedJavaScript.replace(/<%minWidth%>/g, minWidth);\n    injectedJavaScript = injectedJavaScript.replace(/<%maxWidth%>/g, maxWidth);\n    var html = htmlContentValue(injectedJavaScript);\n    html = html.replace(/<%bgWidth%>/g, bgWidth);\n    html = html.replace(/<%bgHeight%>/g, bgHeight);\n    html = html.replace(/<%bgSrc%>/g, bgSrc);\n    html = html.replace(/<%overlayWidth%>/g, overlayWidth);\n    html = html.replace(/<%overlayHeight%>/g, overlayHeight);\n    html = html.replace(/<%overlaySrc%>/g, overlaySrc);\n    html = html.replace(/<%style%>/g, webStyle);\n    html = html.replace(/<%description%>/g, descriptionText);\n    html = html.replace(/<%confirm%>/g, confirmText);\n    html = html.replace(/<%clear%>/g, clearText);\n    html = html.replace(/<%orientation%>/g, rotated);\n    return {\n      html: html\n    };\n  }, [customHtml, autoClear, trimWhitespace, rotated, imageType, webStyle, descriptionText, confirmText, clearText, dataURL]);\n\n  var isJson = function isJson(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  };\n\n  var getSignature = function getSignature(e) {\n    switch (e.nativeEvent.data) {\n      case \"BEGIN\":\n        onBegin();\n        break;\n\n      case \"END\":\n        onEnd();\n        break;\n\n      case \"EMPTY\":\n        onEmpty();\n        break;\n\n      case \"CLEAR\":\n        onClear();\n        break;\n\n      case \"UNDO\":\n        onUndo();\n        break;\n\n      case \"REDO\":\n        onRedo();\n        break;\n\n      case \"DRAW\":\n        onDraw();\n        break;\n\n      case \"ERASE\":\n        onErase();\n        break;\n\n      case \"CHANGE_PEN\":\n        onChangePenColor();\n        break;\n\n      case \"CHANGE_PEN_SIZE\":\n        onChangePenSize();\n        break;\n\n      default:\n        isJson(e.nativeEvent.data) ? onGetData(e.nativeEvent.data) : onOK(e.nativeEvent.data);\n    }\n  };\n\n  useImperativeHandle(ref, function () {\n    return {\n      readSignature: function readSignature() {\n        if (webViewRef.current) {\n          webViewRef.current.injectJavaScript(\"readSignature();true;\");\n        }\n      },\n      clearSignature: function clearSignature() {\n        if (webViewRef.current) {\n          webViewRef.current.injectJavaScript(\"clearSignature();true;\");\n        }\n      },\n      undo: function undo() {\n        if (webViewRef.current) {\n          webViewRef.current.injectJavaScript(\"undo();true;\");\n        }\n      },\n      redo: function redo() {\n        if (webViewRef.current) {\n          webViewRef.current.injectJavaScript(\"redo();true;\");\n        }\n      },\n      draw: function draw() {\n        if (webViewRef.current) {\n          webViewRef.current.injectJavaScript(\"draw();true;\");\n        }\n      },\n      erase: function erase() {\n        if (webViewRef.current) {\n          webViewRef.current.injectJavaScript(\"erase();true;\");\n        }\n      },\n      changePenColor: function changePenColor(color) {\n        if (webViewRef.current) {\n          webViewRef.current.injectJavaScript(\"changePenColor('\" + color + \"');true;\");\n        }\n      },\n      changePenSize: function changePenSize(minW, maxW) {\n        if (webViewRef.current) {\n          webViewRef.current.injectJavaScript(\"changePenSize(\" + minW + ',' + maxW + \");true;\");\n        }\n      },\n      getData: function getData() {\n        if (webViewRef.current) {\n          webViewRef.current.injectJavaScript(\"getData();true;\");\n        }\n      }\n    };\n  }, [webViewRef]);\n\n  var renderError = function renderError(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    return console.warn(\"WebView error: \", nativeEvent);\n  };\n\n  return _jsxs(View, {\n    style: [styles.webBg, style],\n    children: [_jsx(WebView, {\n      bounces: false,\n      style: [webviewContainerStyle],\n      scrollEnabled: scrollable,\n      androidHardwareAccelerationDisabled: androidHardwareAccelerationDisabled,\n      ref: webViewRef,\n      useWebKit: true,\n      source: source,\n      onMessage: getSignature,\n      javaScriptEnabled: true,\n      onError: renderError,\n      onLoadEnd: function onLoadEnd() {\n        return setLoading(false);\n      }\n    }), loading && _jsx(View, {\n      style: styles.loadingOverlayContainer,\n      children: _jsx(ActivityIndicator, {})\n    })]\n  });\n});\nexport default SignatureView;",
	"map": {
		"version": 3,
		"sources": [
			"/Users/llh/Documents/map/frontend/node_modules/react-native-signature-canvas/index.js"
		],
		"names": [
			"React",
			"useState",
			"useMemo",
			"useRef",
			"forwardRef",
			"useImperativeHandle",
			"htmlContent",
			"injectedSignaturePad",
			"injectedApplication",
			"WebView",
			"styles",
			"StyleSheet",
			"create",
			"webBg",
			"width",
			"backgroundColor",
			"flex",
			"loadingOverlayContainer",
			"position",
			"top",
			"bottom",
			"left",
			"right",
			"alignItems",
			"justifyContent",
			"SignatureView",
			"ref",
			"androidHardwareAccelerationDisabled",
			"autoClear",
			"bgHeight",
			"bgWidth",
			"bgSrc",
			"clearText",
			"confirmText",
			"customHtml",
			"dataURL",
			"descriptionText",
			"dotSize",
			"imageType",
			"minWidth",
			"maxWidth",
			"onOK",
			"onEmpty",
			"onClear",
			"onUndo",
			"onRedo",
			"onDraw",
			"onErase",
			"onGetData",
			"onChangePenColor",
			"onChangePenSize",
			"onBegin",
			"onEnd",
			"overlayHeight",
			"overlayWidth",
			"overlaySrc",
			"penColor",
			"rotated",
			"style",
			"scrollable",
			"trimWhitespace",
			"webStyle",
			"webviewContainerStyle",
			"loading",
			"setLoading",
			"webViewRef",
			"source",
			"injectedJavaScript",
			"htmlContentValue",
			"replace",
			"html",
			"isJson",
			"str",
			"JSON",
			"parse",
			"e",
			"getSignature",
			"nativeEvent",
			"data",
			"readSignature",
			"current",
			"injectJavaScript",
			"clearSignature",
			"undo",
			"redo",
			"draw",
			"erase",
			"changePenColor",
			"color",
			"changePenSize",
			"minW",
			"maxW",
			"getData",
			"renderError",
			"console",
			"warn"
		],
		"mappings": "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",
		"sourcesContent": [
			"import React, { useState, useMemo, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport { View, StyleSheet, ActivityIndicator } from \"react-native\";\n\nimport htmlContent from \"./h5/html\";\nimport injectedSignaturePad from \"./h5/js/signature_pad\";\nimport injectedApplication from \"./h5/js/app\";\n\nimport { WebView } from \"react-native-webview\";\n\nconst styles = StyleSheet.create({\n  webBg: {\n    width: \"100%\",\n    backgroundColor: \"#FFF\",\n    flex: 1\n  },\n  loadingOverlayContainer: { position: \"absolute\", top: 0, bottom: 0, left: 0, right: 0, alignItems: \"center\", justifyContent: \"center\" },\n});\n\nconst SignatureView = forwardRef(({\n  androidHardwareAccelerationDisabled = false,\n  autoClear = false,\n  backgroundColor = \"\",\n  bgHeight = 0,\n  bgWidth = 0,\n  bgSrc = null,\n  clearText = \"Clear\",\n  confirmText = \"Confirm\",\n  customHtml = null,\n  dataURL = \"\",\n  descriptionText = \"Sign above\",\n  dotSize = null,\n  imageType = \"\",\n  minWidth = 0.5,\n  maxWidth = 2.5,\n  onOK = () => {},\n  onEmpty = () => {},\n  onClear = () => {},\n  onUndo=()=>{},\n  onRedo=()=>{},\n  onDraw=()=>{},\n  onErase=()=>{},\n  onGetData=()=>{},\n  onChangePenColor=()=>{},\n  onChangePenSize=()=>{},\n  onBegin = () => {},\n  onEnd = () => {},\n  overlayHeight = 0,\n  overlayWidth = 0,\n  overlaySrc = null,\n  penColor = \"\",\n  rotated = false,\n  style = null,\n  scrollable = false,\n  trimWhitespace = false,\n  webStyle = \"\",\n  webviewContainerStyle = null,\n}, ref) => {\n  const [loading, setLoading] = useState(true);\n  const webViewRef = useRef();\n  const source = useMemo(() => {\n    let injectedJavaScript = injectedSignaturePad + injectedApplication;\n    const htmlContentValue = customHtml ? customHtml : htmlContent;\n    injectedJavaScript = injectedJavaScript.replace(/<%autoClear%>/g, autoClear);\n    injectedJavaScript = injectedJavaScript.replace(/<%trimWhitespace%>/g, trimWhitespace);\n    injectedJavaScript = injectedJavaScript.replace(/<%imageType%>/g, imageType);\n    injectedJavaScript = injectedJavaScript.replace(/<%dataURL%>/g, dataURL);\n    injectedJavaScript = injectedJavaScript.replace(/<%penColor%>/g, penColor);\n    injectedJavaScript = injectedJavaScript.replace(/<%backgroundColor%>/g, backgroundColor);\n    injectedJavaScript = injectedJavaScript.replace(/<%dotSize%>/g, dotSize);\n    injectedJavaScript = injectedJavaScript.replace(/<%minWidth%>/g, minWidth);\n    injectedJavaScript = injectedJavaScript.replace(/<%maxWidth%>/g, maxWidth);\n    \n    let html = htmlContentValue(injectedJavaScript);\n    html = html.replace(/<%bgWidth%>/g, bgWidth);\n    html = html.replace(/<%bgHeight%>/g, bgHeight);\n    html = html.replace(/<%bgSrc%>/g, bgSrc);\n    html = html.replace(/<%overlayWidth%>/g, overlayWidth);\n    html = html.replace(/<%overlayHeight%>/g, overlayHeight);\n    html = html.replace(/<%overlaySrc%>/g, overlaySrc);\n    html = html.replace(/<%style%>/g, webStyle);\n    html = html.replace(/<%description%>/g, descriptionText);\n    html = html.replace(/<%confirm%>/g, confirmText);\n    html = html.replace(/<%clear%>/g, clearText);\n    html = html.replace(/<%orientation%>/g, rotated);\n\n    return { html };\n  }, [customHtml, autoClear, trimWhitespace, rotated, imageType, webStyle, descriptionText, confirmText, clearText, dataURL])\n  \n  const isJson = (str)=> {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n   }\n\n  const getSignature = e => {\n    switch (e.nativeEvent.data) {\n      case \"BEGIN\":\n        onBegin();\n        break;\n      case \"END\":\n        onEnd();\n        break;\n      case \"EMPTY\":\n        onEmpty();\n        break;\n      case \"CLEAR\":\n        onClear();\n        break;\n      case \"UNDO\":\n        onUndo();\n        break;\n      case \"REDO\":\n        onRedo();\n        break;\n      case \"DRAW\":\n        onDraw();\n        break;\n      case \"ERASE\":\n        onErase();\n        break;\n      case \"CHANGE_PEN\":\n        onChangePenColor();\n        break;\n      case \"CHANGE_PEN_SIZE\":\n        onChangePenSize();\n        break;\n      default:\n        isJson(e.nativeEvent.data)? onGetData(e.nativeEvent.data): onOK(e.nativeEvent.data);\n    }\n  };\n\n  useImperativeHandle(ref, () => ({\n    readSignature: () => {\n      if (webViewRef.current) {\n        webViewRef.current.injectJavaScript(\"readSignature();true;\");\n      }\n    },\n    clearSignature: () => {\n      if (webViewRef.current) {\n        webViewRef.current.injectJavaScript(\"clearSignature();true;\");\n      }\n    },\n    undo: () => {\n      if (webViewRef.current) {\n        webViewRef.current.injectJavaScript(\"undo();true;\");\n      }\n    },\n    redo: () => {\n      if (webViewRef.current) {\n        webViewRef.current.injectJavaScript(\"redo();true;\");\n      }\n    },\n    draw: () => {\n      if (webViewRef.current) {\n        webViewRef.current.injectJavaScript(\"draw();true;\");\n      }\n    },\n    erase: () => {\n      if (webViewRef.current) {\n        webViewRef.current.injectJavaScript(\"erase();true;\");\n      }\n    },\n    changePenColor: (color) => {\n      if (webViewRef.current) {\n        webViewRef.current.injectJavaScript(\"changePenColor('\"+color+\"');true;\");\n      }\n    },\n    changePenSize: (minW, maxW) => {\n      if (webViewRef.current) {\n        webViewRef.current.injectJavaScript(\"changePenSize(\"+minW+','+maxW+\");true;\");\n      }\n    },\n    getData: () => {\n      if (webViewRef.current) {\n        webViewRef.current.injectJavaScript(\"getData();true;\");\n      }\n    }\n  }), [webViewRef]);\n\n  const renderError = ({nativeEvent}) => console.warn(\"WebView error: \", nativeEvent);\n\n  return (\n    <View style={[styles.webBg, style]}>\n      <WebView\n        bounces={false}\n        style={[webviewContainerStyle]}\n        scrollEnabled={scrollable}\n        androidHardwareAccelerationDisabled={androidHardwareAccelerationDisabled}\n        ref={webViewRef}\n        useWebKit={true}\n        source={source}\n        onMessage={getSignature}\n        javaScriptEnabled={true}\n        onError={renderError}\n        onLoadEnd={() => setLoading(false)}\n      />\n      {loading && <View style={styles.loadingOverlayContainer}>\n        <ActivityIndicator />\n      </View>}\n    </View>\n  );\n})\n\nexport default SignatureView;\n"
		]
	},
	"metadata": {},
	"sourceType": "module"
}
