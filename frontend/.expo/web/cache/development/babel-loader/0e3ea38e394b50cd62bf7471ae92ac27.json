{
	"ast": null,
	"code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { CHANGE_REFRESH, CHANGE_LIST } from \"./actionType\";\nimport baseUrl from \"../../../assets/constants/BaseUrl\";\nexport var getSetRefreshingAction = function getSetRefreshingAction() {\n  return {\n    type: CHANGE_REFRESH,\n    value: true\n  };\n};\nexport var getChangeListAction = function getChangeListAction(data, cover) {\n  return {\n    type: CHANGE_LIST,\n    list: data,\n    refreshing: false,\n    cover: cover\n  };\n};\nexport var getListAction = function getListAction(navigation, cover) {\n  return function _callee(dispatch) {\n    var id, res, action;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = navigation;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(baseUrl + \"/review/get/\" + id));\n\n          case 3:\n            res = _context.sent;\n\n            if (res.data) {\n              action = getChangeListAction(res.data, cover);\n              dispatch(action);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};",
	"map": {
		"version": 3,
		"sources": [
			"/Users/llh/Documents/map/frontend/screens/view/detail/actionCreator.js"
		],
		"names": [
			"axios",
			"CHANGE_REFRESH",
			"CHANGE_LIST",
			"baseUrl",
			"getSetRefreshingAction",
			"type",
			"value",
			"getChangeListAction",
			"data",
			"cover",
			"list",
			"refreshing",
			"getListAction",
			"navigation",
			"dispatch",
			"id",
			"get",
			"res",
			"action"
		],
		"mappings": ";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,WAAzB;AACA,OAAOC,OAAP;AAIA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,cADH;AAEHK,IAAAA,KAAK,EAAE;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAOC,KAAP,EAAiB;AAChD,SAAO;AACHJ,IAAAA,IAAI,EAAEH,WADH;AAEHQ,IAAAA,IAAI,EAAEF,IAFH;AAGHG,IAAAA,UAAU,EAAE,KAHT;AAIHF,IAAAA,KAAK,EAAEA;AAJJ,GAAP;AAMH,CAPM;AASP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAaJ,KAAb;AAAA,SAAuB,iBAAMK,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1CC,YAAAA,EAD0C,GACrCF,UADqC;AAAA;AAAA,6CAE9Bb,KAAK,CAACgB,GAAN,CAAab,OAAb,oBAAmCY,EAAnC,CAF8B;;AAAA;AAE1CE,YAAAA,GAF0C;;AAGhD,gBAAIA,GAAG,CAACT,IAAR,EAAc;AACJU,cAAAA,MADI,GACKX,mBAAmB,CAACU,GAAG,CAACT,IAAL,EAAWC,KAAX,CADxB;AAEVK,cAAAA,QAAQ,CAACI,MAAD,CAAR;AACH;;AAN+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;AAAA,CAAtB",
		"sourcesContent": [
			"import axios from 'axios'\nimport { CHANGE_REFRESH, CHANGE_LIST } from './actionType';\nimport baseUrl from '../../../assets/constants/BaseUrl'\n\n// const baseUrl = 'http://127.0.0.1:5000';\n\nexport const getSetRefreshingAction = () => {\n    return {\n        type: CHANGE_REFRESH,\n        value: true\n    }\n};\n\nexport const getChangeListAction = (data, cover) => {\n    return {\n        type: CHANGE_LIST,\n        list: data,\n        refreshing: false,\n        cover: cover\n    }\n};\n\nexport const getListAction = (navigation, cover) => async dispatch => {\n    const id = navigation;\n    const res = await axios.get(`${baseUrl}/review/get/${id}`)\n    if (res.data) {\n        const action = getChangeListAction(res.data, cover)\n        dispatch(action)\n    }\n};"
		]
	},
	"metadata": {},
	"sourceType": "module"
}
