{
	"ast": null,
	"code": "import React, { useState, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport Animated, { interpolate, Extrapolate, useAnimatedStyle, withSpring, useAnimatedScrollHandler, useSharedValue } from 'react-native-reanimated';\nimport { AntDesign, Entypo } from \"@expo/vector-icons\";\nimport { windowWidth } from \"../../assets/constants/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AnimatedView = Animated.createAnimatedComponent(View);\nexport default function FloatingButton(props) {\n  var animation = useSharedValue(0);\n  var translateX = useSharedValue(0);\n  var translateY = useSharedValue(0);\n  var contextX = useSharedValue({\n    x: 0\n  });\n  var contextY = useSharedValue({\n    y: 0\n  });\n  var gesture = Gesture.Pan().onStart(function () {\n    var _f = function _f() {\n      contextX.value = {\n        x: translateX.value\n      };\n      contextY.value = {\n        y: translateY.value\n      };\n    };\n\n    _f._closure = {\n      contextX: contextX,\n      translateX: translateX,\n      contextY: contextY,\n      translateY: translateY\n    };\n    _f.asString = \"function _f(){const{contextX,translateX,contextY,translateY}=jsThis._closure;{contextX.value={x:translateX.value};contextY.value={y:translateY.value};}}\";\n    _f.__workletHash = 14120257219434;\n    _f.__location = \"/Users/llh/Documents/map/frontend/components/FloatingButton/index.js (27:10)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }()).onUpdate(function () {\n    var _f = function _f(event) {\n      translateX.value = event.translationX + contextX.value.x;\n      translateY.value = event.translationY + contextY.value.y;\n    };\n\n    _f._closure = {\n      translateX: translateX,\n      contextX: contextX,\n      translateY: translateY,\n      contextY: contextY\n    };\n    _f.asString = \"function _f(event){const{translateX,contextX,translateY,contextY}=jsThis._closure;{translateX.value=event.translationX+contextX.value.x;translateY.value=event.translationY+contextY.value.y;}}\";\n    _f.__workletHash = 13826961814535;\n    _f.__location = \"/Users/llh/Documents/map/frontend/components/FloatingButton/index.js (31:11)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }()).onEnd(function () {\n    var _f = function _f() {};\n\n    _f._closure = {};\n    _f.asString = \"function _f(){}\";\n    _f.__workletHash = 16394749715515;\n    _f.__location = \"/Users/llh/Documents/map/frontend/components/FloatingButton/index.js (36:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n\n  var toggleMenu = function toggleMenu() {\n    animation.value = withSpring(!animation.value, {\n      friction: 5\n    });\n  };\n\n  var dragAnimation = useAnimatedStyle(function () {\n    var _f = function _f() {\n      var rotate = interpolate(animation.value, [0, 1], [0, 45]);\n      return {\n        transform: [{\n          translateX: translateX.value\n        }, {\n          translateY: translateY.value\n        }, {\n          rotate: rotate + \"deg\"\n        }]\n      };\n    };\n\n    _f._closure = {\n      interpolate: interpolate,\n      animation: animation,\n      translateX: translateX,\n      translateY: translateY\n    };\n    _f.asString = \"function _f(){const{interpolate,animation,translateX,translateY}=jsThis._closure;{const rotate=interpolate(animation.value,[0,1],[0,45]);return{transform:[{translateX:translateX.value},{translateY:translateY.value},{rotate:rotate+\\\"deg\\\"}]};}}\";\n    _f.__workletHash = 1389278269522;\n    _f.__location = \"/Users/llh/Documents/map/frontend/components/FloatingButton/index.js (49:40)\";\n    _f.__optimalization = 3;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var dragAnimation1 = useAnimatedStyle(function () {\n    var _f = function _f() {\n      var offsetY = interpolate(animation.value, [0, 1], [0, -60 - 5]);\n      return {\n        transform: [{\n          translateX: translateX.value\n        }, {\n          translateY: translateY.value + offsetY\n        }]\n      };\n    };\n\n    _f._closure = {\n      interpolate: interpolate,\n      animation: animation,\n      translateX: translateX,\n      translateY: translateY\n    };\n    _f.asString = \"function _f(){const{interpolate,animation,translateX,translateY}=jsThis._closure;{const offsetY=interpolate(animation.value,[0,1],[0,-60-5]);return{transform:[{translateX:translateX.value},{translateY:translateY.value+offsetY}]};}}\";\n    _f.__workletHash = 15950062084527;\n    _f.__location = \"/Users/llh/Documents/map/frontend/components/FloatingButton/index.js (70:41)\";\n    _f.__optimalization = 3;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var dragAnimation2 = useAnimatedStyle(function () {\n    var _f = function _f() {\n      var offsetY = interpolate(animation.value, [0, 1], [0, -60 * 2 - 5]);\n      return {\n        transform: [{\n          translateX: translateX.value\n        }, {\n          translateY: translateY.value + offsetY\n        }]\n      };\n    };\n\n    _f._closure = {\n      interpolate: interpolate,\n      animation: animation,\n      translateX: translateX,\n      translateY: translateY\n    };\n    _f.asString = \"function _f(){const{interpolate,animation,translateX,translateY}=jsThis._closure;{const offsetY=interpolate(animation.value,[0,1],[0,-60*2-5]);return{transform:[{translateX:translateX.value},{translateY:translateY.value+offsetY}]};}}\";\n    _f.__workletHash = 10479081983095;\n    _f.__location = \"/Users/llh/Documents/map/frontend/components/FloatingButton/index.js (88:41)\";\n    _f.__optimalization = 3;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var dragAnimation3 = useAnimatedStyle(function () {\n    var _f = function _f() {\n      var offsetY = interpolate(animation.value, [0, 1], [0, -60 * 3 - 5]);\n      return {\n        transform: [{\n          translateX: translateX.value\n        }, {\n          translateY: translateY.value + offsetY\n        }]\n      };\n    };\n\n    _f._closure = {\n      interpolate: interpolate,\n      animation: animation,\n      translateX: translateX,\n      translateY: translateY\n    };\n    _f.asString = \"function _f(){const{interpolate,animation,translateX,translateY}=jsThis._closure;{const offsetY=interpolate(animation.value,[0,1],[0,-60*3-5]);return{transform:[{translateX:translateX.value},{translateY:translateY.value+offsetY}]};}}\";\n    _f.__workletHash = 10670931873430;\n    _f.__location = \"/Users/llh/Documents/map/frontend/components/FloatingButton/index.js (106:41)\";\n    _f.__optimalization = 3;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  return _jsx(GestureDetector, {\n    gesture: gesture,\n    children: _jsxs(View, {\n      style: [styles.container, props.style],\n      children: [_jsx(TouchableWithoutFeedback, {\n        children: _jsx(AnimatedView, {\n          style: [styles.button, styles.list, dragAnimation3],\n          children: _jsx(Entypo, {\n            name: \"menu\",\n            size: 20,\n            color: \"#007aff\"\n          })\n        })\n      }), _jsx(TouchableWithoutFeedback, {\n        children: _jsx(AnimatedView, {\n          style: [styles.button, styles.list, dragAnimation2],\n          children: _jsx(Entypo, {\n            name: \"text-document\",\n            size: 20,\n            color: \"#007aff\"\n          })\n        })\n      }), _jsx(TouchableWithoutFeedback, {\n        children: _jsx(AnimatedView, {\n          style: [styles.button, styles.list, dragAnimation1],\n          children: _jsx(Entypo, {\n            name: \"location\",\n            size: 20,\n            color: \"#007aff\"\n          })\n        })\n      }), _jsx(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          toggleMenu();\n        },\n        children: _jsx(AnimatedView, {\n          style: [styles.button, styles.menu, dragAnimation],\n          children: _jsx(AntDesign, {\n            name: \"plus\",\n            size: 24,\n            color: \"#ffffff\"\n          })\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    position: 'absolute',\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowRadius: 10,\n    shadowColor: 'grey',\n    shadowOpacity: 0.25,\n    shadowOffset: {\n      height: 5\n    }\n  },\n  menu: {\n    backgroundColor: '#007aff'\n  },\n  list: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#ffffff'\n  }\n});",
	"map": {
		"version": 3,
		"sources": [
			"/Users/llh/Documents/map/frontend/components/FloatingButton/index.js"
		],
		"names": [
			"React",
			"useState",
			"useCallback",
			"Gesture",
			"GestureDetector",
			"Animated",
			"interpolate",
			"Extrapolate",
			"useAnimatedStyle",
			"withSpring",
			"useAnimatedScrollHandler",
			"useSharedValue",
			"AntDesign",
			"Entypo",
			"windowWidth",
			"AnimatedView",
			"createAnimatedComponent",
			"View",
			"FloatingButton",
			"props",
			"animation",
			"translateX",
			"translateY",
			"contextX",
			"x",
			"contextY",
			"y",
			"gesture",
			"Pan",
			"onStart",
			"value",
			"onUpdate",
			"event",
			"translationX",
			"translationY",
			"onEnd",
			"toggleMenu",
			"friction",
			"dragAnimation",
			"rotate",
			"transform",
			"dragAnimation1",
			"offsetY",
			"dragAnimation2",
			"dragAnimation3",
			"styles",
			"container",
			"style",
			"button",
			"list",
			"menu",
			"StyleSheet",
			"create",
			"flex",
			"justifyContent",
			"alignItems",
			"position",
			"width",
			"height",
			"borderRadius",
			"shadowRadius",
			"shadowColor",
			"shadowOpacity",
			"shadowOffset",
			"backgroundColor"
		],
		"mappings": "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",
		"sourcesContent": [
			"import React, { useState, useCallback } from 'react';\nimport { View, Text, StyleSheet, TouchableWithoutFeedback, TouchableOpacity, TouchableNativeFeedback } from 'react-native';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\n\nimport Animated, { interpolate, Extrapolate, useAnimatedStyle, withSpring, useAnimatedScrollHandler, useSharedValue } from 'react-native-reanimated'\nimport { AntDesign, Entypo } from 'react-native-vector-icons';\n\nimport { windowWidth } from '../../assets/constants/Dimensions'\n\nconst AnimatedView = Animated.createAnimatedComponent(View);\n\nexport default function FloatingButton(props) {\n\n\tconst animation = useSharedValue(0);\n\tconst translateX = useSharedValue(0);\n\tconst translateY = useSharedValue(0);\n\tconst contextX = useSharedValue({x:0});\n\tconst contextY = useSharedValue({y:0});\n\n\t// const scrollTo = useCallback((desX, desY) => {\n\t// \t\"worklet\";\n\t// \ttranslateX.value = desX;\n\t// \ttranslateY.value = desY;\n\t// }, [])\n\n\tconst gesture = Gesture.Pan()\n\t.onStart(() => {\n\t\tcontextX.value = { x: translateX.value }\n\t\tcontextY.value = { y: translateY.value }\n\t})\n\t.onUpdate((event) => {\n\t\ttranslateX.value = event.translationX + contextX.value.x;\n\t\ttranslateY.value = event.translationY + contextY.value.y;\n\t\t// console.log(translateX.value)\n\t})\n\t.onEnd(() => {\n\t\t// if (translateX.value > 0) {\n\t\t// \ttranslateX.value = -windowWidth * 2 / 3\n\t\t// }\n\t\t// else if (translateX.value < 0) {\n\t\t// \ttranslateX.value = -windowWidth / 3\n\t\t// }\n\t});\n\n\tconst toggleMenu = () => {\n\t\tanimation.value = withSpring(!animation.value, { friction: 5 })\n\t}\n\n\tconst dragAnimation = useAnimatedStyle(() => {\n\t\tconst rotate = interpolate(\n      animation.value,\n      [0, 1],\n\t\t\t[0, 45]\n    )\n\t\treturn {\n\t\t\ttransform: [\n\t\t\t\t{ \n\t\t\t\t\ttranslateX: translateX.value,\n\t\t\t\t},\n\t\t\t\t{ \n\t\t\t\t\ttranslateY: translateY.value,\n\t\t\t\t},\n\t\t\t\t{ \n\t\t\t\t\trotate : rotate + \"deg\"\n\t\t\t \t},\n\t\t\t],\n\t\t}\n\t})\n\n\tconst dragAnimation1 = useAnimatedStyle(() => {\n\t\tconst offsetY = interpolate(\n      animation.value,\n      [0, 1],\n\t\t\t[0, -60 - 5]\n    )\n\t\treturn {\n\t\t\ttransform: [\n\t\t\t\t{ \n\t\t\t\t\ttranslateX: translateX.value,\n\t\t\t\t},\n\t\t\t\t{ \n\t\t\t\t\ttranslateY: translateY.value + offsetY,\n\t\t\t\t},\n\t\t\t],\n\t\t}\n\t})\n\n\tconst dragAnimation2 = useAnimatedStyle(() => {\n\t\tconst offsetY = interpolate(\n      animation.value,\n      [0, 1],\n\t\t\t[0, -60 * 2 - 5]\n    )\n\t\treturn {\n\t\t\ttransform: [\n\t\t\t\t{ \n\t\t\t\t\ttranslateX: translateX.value,\n\t\t\t\t},\n\t\t\t\t{ \n\t\t\t\t\ttranslateY: translateY.value + offsetY,\n\t\t\t\t},\n\t\t\t],\n\t\t}\n\t})\n\n\tconst dragAnimation3 = useAnimatedStyle(() => {\n\t\tconst offsetY = interpolate(\n      animation.value,\n      [0, 1],\n\t\t\t[0, -60 * 3 - 5]\n    )\n\t\treturn {\n\t\t\ttransform: [\n\t\t\t\t{ \n\t\t\t\t\ttranslateX: translateX.value,\n\t\t\t\t},\n\t\t\t\t{ \n\t\t\t\t\ttranslateY: translateY.value + offsetY,\n\t\t\t\t},\n\t\t\t],\n\t\t}\n\t})\n\n\treturn (\n\t\t<GestureDetector gesture={gesture}>\n\t\t<View style={[styles.container, props.style]}>\n\t\t\t<TouchableWithoutFeedback>\n\t\t\t\t<AnimatedView style={[styles.button, styles.list, dragAnimation3]}>\n\t\t\t\t\t<Entypo name=\"menu\" size={20} color=\"#007aff\" />\n\t\t\t\t</AnimatedView>\n\t\t\t</TouchableWithoutFeedback>\n\n\t\t\t<TouchableWithoutFeedback>\n\t\t\t\t<AnimatedView style={[styles.button, styles.list, dragAnimation2]}>\n\t\t\t\t\t<Entypo name=\"text-document\" size={20} color=\"#007aff\" />\n\t\t\t\t</AnimatedView>\n\t\t\t</TouchableWithoutFeedback>\n\t\t\t\n\t\t\t<TouchableWithoutFeedback>\n\t\t\t\t<AnimatedView style={[styles.button, styles.list, dragAnimation1]}>\n\t\t\t\t\t<Entypo name=\"location\" size={20} color=\"#007aff\" />\n\t\t\t\t</AnimatedView>\n\t\t\t</TouchableWithoutFeedback>\n\n\t\t\t<TouchableWithoutFeedback onPress={()=>{toggleMenu()}}>\n\t\t\t\t<AnimatedView style={[styles.button, styles.menu, dragAnimation]}>\n\t\t\t\t\t<AntDesign name=\"plus\" size={24} color=\"#ffffff\" />\n\t\t\t\t</AnimatedView>\n\t\t\t</TouchableWithoutFeedback>\n\t\t</View>\n\t\t</GestureDetector>\n\t)\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center'\n\t},\n\tbutton: {\n\t\tposition: 'absolute',\n\t\twidth: 60,\n\t\theight: 60,\n\t\tborderRadius: 30,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tshadowRadius: 10,\n\t\tshadowColor: 'grey',\n\t\tshadowOpacity: 0.25,\n\t\tshadowOffset: { height: 5 },\n\t},\n\tmenu: {\n\t\tbackgroundColor: '#007aff'\n\t},\n\tlist: {\n\t\twidth: 50,\n\t\theight: 50,\n\t\tborderRadius: 25,\n\t\tbackgroundColor: '#ffffff'\n\t},\n\n})"
		]
	},
	"metadata": {},
	"sourceType": "module"
}
