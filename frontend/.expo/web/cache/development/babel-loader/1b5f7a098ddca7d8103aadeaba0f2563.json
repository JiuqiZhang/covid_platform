{
	"ast": null,
	"code": "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      name: '',\n      mail: '',\n      Password: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"submit\",\n    value: function submit() {\n      console.log(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: styles.app,\n        children: [_jsx(TextInput, {\n          placeholder: \" Revenue\",\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              name: text\n            });\n          },\n          style: {\n            borderWidth: 2,\n            borderColor: '#000',\n            padding: 10,\n            marginTop: 10\n          }\n        }), _jsx(TextInput, {\n          placeholder: \" Covid-19 symptoms\",\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              mail: text\n            });\n          },\n          style: {\n            borderWidth: 2,\n            borderColor: '#000',\n            padding: 10,\n            marginTop: 10\n          }\n        }), _jsx(TextInput, {\n          placeholder: \" Rating & Reviews\",\n          secureTextEntry: true,\n          maxLength: 5,\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              Password: text\n            });\n          },\n          style: {\n            borderWidth: 2,\n            borderColor: '#000',\n            padding: 10,\n            marginTop: 10,\n            marginBottom: 10\n          }\n        }), _jsx(Button, {\n          title: \"submit\",\n          onPress: function onPress() {\n            _this2.submit();\n          }\n        })]\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  app: {\n    margin: 20,\n    marginTop: 100\n  },\n  logo: {\n    height: 80\n  },\n  header: {\n    padding: 20\n  }\n});",
	"map": {
		"version": 3,
		"sources": ["/Users/llh/Documents/map/view/report/View.js"],
		"names": [
			"React",
			"App",
			"state",
			"name",
			"mail",
			"Password",
			"console",
			"log",
			"styles",
			"app",
			"text",
			"setState",
			"borderWidth",
			"borderColor",
			"padding",
			"marginTop",
			"marginBottom",
			"submit",
			"Component",
			"StyleSheet",
			"create",
			"margin",
			"logo",
			"height",
			"header"
		],
		"mappings": ";;;;;;;;;;AAuGA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;;IAIsBC,G;;;;;AAEpB,iBAAc;AAAA;;AAAA;;AACZ;AACC,UAAKC,KAAL,GAAa;AACVC,MAAAA,IAAI,EAAE,EADI;AAEVC,MAAAA,IAAI,EAAE,EAFI;AAGVC,MAAAA,QAAQ,EAAE;AAHA,KAAb;AAFW;AAOb;;;;WAED,kBACA;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACD;;;WAED,kBAAS;AAAA;;AACT,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEM,MAAM,CAACC,GAApB;AAAA,mBACE,KAAC,SAAD;AACI,UAAA,WAAW,EAAC,UADhB;AAEI,UAAA,YAAY,EAAE,sBAACC,IAAD,EAAU;AAAE,YAAA,MAAI,CAACC,QAAL,CAAc;AAACR,cAAAA,IAAI,EAAEO;AAAP,aAAd;AAA4B,WAF1D;AAGI,UAAA,KAAK,EAAE;AAACE,YAAAA,WAAW,EAAC,CAAb;AAAgBC,YAAAA,WAAW,EAAC,MAA5B;AAAmCC,YAAAA,OAAO,EAAC,EAA3C;AAA+CC,YAAAA,SAAS,EAAC;AAAzD;AAHX,UADF,EAME,KAAC,SAAD;AACI,UAAA,WAAW,EAAC,oBADhB;AAEI,UAAA,YAAY,EAAE,sBAACL,IAAD,EAAU;AAAE,YAAA,MAAI,CAACC,QAAL,CAAc;AAACP,cAAAA,IAAI,EAAEM;AAAP,aAAd;AAA4B,WAF1D;AAGI,UAAA,KAAK,EAAE;AAACE,YAAAA,WAAW,EAAC,CAAb;AAAgBC,YAAAA,WAAW,EAAC,MAA5B;AAAmCC,YAAAA,OAAO,EAAC,EAA3C;AAA+CC,YAAAA,SAAS,EAAC;AAAzD;AAHX,UANF,EAWE,KAAC,SAAD;AACI,UAAA,WAAW,EAAC,mBADhB;AAEI,UAAA,eAAe,EAAE,IAFrB;AAGI,UAAA,SAAS,EAAE,CAHf;AAII,UAAA,YAAY,EAAE,sBAACL,IAAD,EAAU;AAAE,YAAA,MAAI,CAACC,QAAL,CAAc;AAACN,cAAAA,QAAQ,EAAEK;AAAX,aAAd;AAAgC,WAJ9D;AAKI,UAAA,KAAK,EAAE;AAACE,YAAAA,WAAW,EAAC,CAAb;AAAgBC,YAAAA,WAAW,EAAC,MAA5B;AAAmCC,YAAAA,OAAO,EAAC,EAA3C;AAA+CC,YAAAA,SAAS,EAAC,EAAzD;AAA6DC,YAAAA,YAAY,EAAC;AAA1E;AALX,UAXF,EAkBG,KAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAuB,UAAA,OAAO,EAAE,mBAAI;AAAC,YAAA,MAAI,CAACC,MAAL;AAAc;AAAnD,UAlBH;AAAA,QADF;AAsBD;;;;EAvCiCjB,KAAK,CAACkB,S;;SAAlBjB,G;AAyCtB,IAAMO,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,GAAG,EAAE;AAEFY,IAAAA,MAAM,EAAC,EAFL;AAGFN,IAAAA,SAAS,EAAC;AAHR,GAD0B;AAM/BO,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ,GANyB;AAS/BC,EAAAA,MAAM,EAAE;AACNV,IAAAA,OAAO,EAAE;AADH;AATuB,CAAlB,CAAf",
		"sourcesContent": [
			"// import React from \"react\";\n// import styled from \"styled-components\";\n\n// import { GoogleFormProvider, useGoogleForm } from \"react-google-forms-hooks\";\n\n// import form from \"./form.json\";\n\n// import CheckboxInput from \"./components/CheckboxInput\";\n// import RadioInput from \"./components/RadioInput\";\n// import ShortAnswerInput from \"./components/ShortAnswerInput\";\n// import LongAnswerInput from \"./components/LongAnswerInput\";\n// import RadioGridInput from \"./components/RadioGridInput\";\n// import CheckboxGridInput from \"./components/CheckboxGridInput\";\n// import DropdownInput from \"./components/DropdownInput\";\n// import LinearGrid from \"./components/LinearGrid\";\n\n// const Form = styled.form`\n//   max-width: 600px;\n//   margin: 0 auto;\n//   padding: 50px 0;\n// `;\n\n// const QuestionContainer = styled.div`\n//   margin-bottom: 20px;\n// `;\n\n// const QuestionLabel = styled.h3`\n//   margin-bottom: 10px;\n// `;\n\n// const Questions = () => {\n//   return (\n//     <div>\n//       {form.fields.map((field) => {\n//         const { id } = field;\n\n//         let questionInput = null;\n//         switch (field.type) {\n//           case \"CHECKBOX\":\n//             questionInput = <CheckboxInput id={id} />;\n//             break;\n//           case \"RADIO\":\n//             questionInput = <RadioInput id={id} />;\n//             break;\n//           case \"SHORT_ANSWER\":\n//             questionInput = <ShortAnswerInput id={id} />;\n//             break;\n//           case \"LONG_ANSWER\":\n//             questionInput = <LongAnswerInput id={id} />;\n//             break;\n//           case \"RADIO_GRID\":\n//             questionInput = <RadioGridInput id={id} />;\n//             break;\n//           case \"CHECKBOX_GRID\":\n//             questionInput = <CheckboxGridInput id={id} />;\n//             break;\n//           case \"DROPDOWN\":\n//             questionInput = <DropdownInput id={id} />;\n//             break;\n//           case \"LINEAR\":\n//             questionInput = <LinearGrid id={id} />;\n//             break;\n//           default:\n//             return null;\n//         }\n\n//         if (!questionInput) {\n//           return null;\n//         }\n\n//         return (\n//           <QuestionContainer key={id}>\n//             <QuestionLabel>{field.label}</QuestionLabel>\n//             {questionInput}\n//           </QuestionContainer>\n//         );\n//       })}\n//     </div>\n//   );\n// };\n\n// const App = () => {\n//   const methods = useGoogleForm({ form });\n//   const onSubmit = async (data) => {\n//     console.log(\">>> Here is the data\", data);\n//     await methods.submitToGoogleForms(data);\n//     alert(\"Form submitted with success!\");\n//   };\n\n//   console.log(\">>> Here are the errors!!!\", methods.formState.errors);\n\n//   return (\n//     <GoogleFormProvider {...methods}>\n//       <Form onSubmit={methods.handleSubmit(onSubmit)}>\n//         <Questions />\n//         <button type=\"submit\">Submit</button>\n//       </Form>\n//     </GoogleFormProvider>\n//   );\n// };\n\n// export default App;\n\nimport React from \"react\";\nimport { Button, Image, StyleSheet, Text, View, TextInput } from \"react-native\";\n\n\n export default class App extends React.Component{\n\n  constructor() {\n    super();\n     this.state = {\n        name: '',\n        mail: '',\n        Password: ''\n    }\n  }\n\n  submit()\n  {\n    console.log(this.state)\n  }\n\n  render() {\n  return (\n    <View style={styles.app}>\n      <TextInput\n          placeholder=\" Revenue\"\n          onChangeText={(text) => { this.setState({name: text})}}\n          style={{borderWidth:2, borderColor:'#000',padding:10, marginTop:10}}\n          />\n      <TextInput\n          placeholder=\" Covid-19 symptoms\"\n          onChangeText={(text) => { this.setState({mail: text})}}\n          style={{borderWidth:2, borderColor:'#000',padding:10, marginTop:10}}\n          />\n      <TextInput\n          placeholder=\" Rating & Reviews\"\n          secureTextEntry={true}\n          maxLength={5}\n          onChangeText={(text) => { this.setState({Password: text})}}\n          style={{borderWidth:2, borderColor:'#000',padding:10, marginTop:10, marginBottom:10}}\n          /> \n       <Button title=\"submit\" onPress={()=>{this.submit()}} />            \n    </View>\n  );\n}}\n\nconst styles = StyleSheet.create({\n  app: {\n     \n     margin:20,\n     marginTop:100\n  },\n  logo: {\n    height: 80\n  },\n  header: {\n    padding: 20\n  },\n\n});\n\n"
		]
	},
	"metadata": {},
	"sourceType": "module"
}
