{
	"ast": null,
	"code": "import React, { useCallback } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated, { useAnimatedStyle, useSharedValue, interpolate, withSpring } from 'react-native-reanimated';\nimport { MaterialIcons, Entypo } from \"@expo/vector-icons\";\nimport StarRating from \"../Rating\";\nimport WaterfallList from \"../WaterfallList\";\nimport styles from \"./style\";\nimport markers from \"../../data/mapData\";\nimport items from \"../../data/boxData\";\nimport { windowHeight, windowWidth } from \"../../assets/constants/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Card = function Card(_ref) {\n  var children = _ref.children,\n      index = _ref.index,\n      marker = _ref.marker,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n  var pageOffset = windowWidth * index;\n  var rStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        transform: [{\n          translateX: translateX.value + pageOffset\n        }, {\n          translateY: translateY.value\n        }]\n      };\n    };\n\n    _f._closure = {\n      translateX: translateX,\n      pageOffset: pageOffset,\n      translateY: translateY\n    };\n    _f.asString = \"function _f(){const{translateX,pageOffset,translateY}=jsThis._closure;{return{transform:[{translateX:translateX.value+pageOffset},{translateY:translateY.value}]};}}\";\n    _f.__workletHash = 3374829075494;\n    _f.__location = \"/Users/llh/Documents/map/frontend/components/Card/index.js (18:34)\";\n    _f.__optimalization = 3;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  return _jsxs(Animated.View, {\n    style: [styles.card, rStyle, {\n      backgroundColor: 'transparent'\n    }],\n    children: [_jsxs(View, {\n      style: [styles.textContent, {\n        backgroundColor: 'white'\n      }],\n      children: [children, _jsx(Text, {\n        style: styles.cardtitle,\n        children: marker.title\n      }), _jsx(View, {\n        style: styles.rating,\n        children: _jsx(StarRating, {\n          ratings: marker.rating,\n          reviews: marker.reviews\n        })\n      })]\n    }), _jsxs(View, {\n      style: {\n        height: 220,\n        backgroundColor: 'white'\n      },\n      children: [_jsxs(View, {\n        style: styles.iconWrapper,\n        children: [_jsxs(View, {\n          style: styles.icon,\n          children: [_jsx(MaterialIcons, {\n            name: \"restaurant\"\n          }), _jsx(Text, {\n            style: styles.iconText,\n            children: \" RESTAURANT\"\n          })]\n        }), _jsxs(View, {\n          style: styles.icon,\n          children: [_jsx(MaterialIcons, {\n            name: \"local-cafe\"\n          }), _jsx(Text, {\n            style: styles.iconText,\n            children: \" CAFE\"\n          })]\n        }), _jsxs(View, {\n          style: styles.icon,\n          children: [_jsx(MaterialIcons, {\n            name: \"local-mall\"\n          }), _jsx(Text, {\n            style: styles.iconText,\n            children: \" MALL\"\n          })]\n        })]\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        scrollEventThrottle: 16,\n        style: {\n          marginHorizontal: 20,\n          marginTop: 20,\n          marginBottom: 10\n        },\n        children: markers.map(function (marker, index) {\n          return _jsx(View, {\n            style: {\n              width: 100,\n              height: 100,\n              borderRadius: 10,\n              overflow: \"hidden\",\n              marginRight: 15\n            },\n            children: _jsx(Image, {\n              source: require(\"../../assets/images/test.png\"),\n              style: {\n                height: 100,\n                width: 100\n              },\n              resizeMode: \"cover\"\n            })\n          }, index);\n        })\n      }), _jsxs(View, {\n        style: styles.buttonWrapper,\n        children: [_jsx(TouchableOpacity, {\n          style: [styles.button, {\n            backgroundColor: '#f74d4d'\n          }],\n          children: _jsx(Text, {\n            style: [styles.text, {\n              color: 'white'\n            }],\n            children: \"Check-In\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.button, {\n            backgroundColor: '#007aff'\n          }],\n          children: _jsx(Text, {\n            style: [styles.text, {\n              color: 'white'\n            }],\n            children: \"Review\"\n          })\n        })]\n      })]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      },\n      children: [_jsx(View, {\n        style: {\n          height: 100,\n          width: 20,\n          backgroundColor: 'white'\n        }\n      }), _jsx(View, {\n        style: {\n          height: 100,\n          width: 20,\n          backgroundColor: 'white'\n        }\n      })]\n    }), _jsx(View, {\n      style: {\n        zIndex: 4,\n        height: 450,\n        backgroundColor: 'white',\n        paddingTop: 12.5,\n        marginLeft: -2.5,\n        alignSelf: 'center'\n      },\n      children: _jsx(WaterfallList, {\n        items: items\n      })\n    })]\n  });\n};\n\nexport default Card;",
	"map": {
		"version": 3,
		"sources": ["/Users/llh/Documents/map/frontend/components/Card/index.js"],
		"names": [
			"React",
			"useCallback",
			"Animated",
			"useAnimatedStyle",
			"useSharedValue",
			"interpolate",
			"withSpring",
			"MaterialIcons",
			"Entypo",
			"StarRating",
			"WaterfallList",
			"styles",
			"markers",
			"items",
			"windowHeight",
			"windowWidth",
			"Card",
			"children",
			"index",
			"marker",
			"translateX",
			"translateY",
			"pageOffset",
			"rStyle",
			"transform",
			"value",
			"card",
			"backgroundColor",
			"textContent",
			"cardtitle",
			"title",
			"rating",
			"reviews",
			"height",
			"iconWrapper",
			"icon",
			"iconText",
			"marginHorizontal",
			"marginTop",
			"marginBottom",
			"map",
			"width",
			"borderRadius",
			"overflow",
			"marginRight",
			"require",
			"buttonWrapper",
			"button",
			"text",
			"color",
			"flexDirection",
			"justifyContent",
			"zIndex",
			"paddingTop",
			"marginLeft",
			"alignSelf"
		],
		"mappings": "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",
		"sourcesContent": [
			"import React, { useCallback } from 'react';\nimport { Image, Dimensions, StyleSheet, Text, View, ScrollView, TouchableOpacity } from 'react-native';\nimport Animated, { useAnimatedStyle, useSharedValue, interpolate, withSpring } from 'react-native-reanimated';\nimport { MaterialIcons, Entypo } from 'react-native-vector-icons';\n\nimport StarRating from '../Rating'\nimport WaterfallList from '../WaterfallList';\nimport styles from './style';\n\nimport markers from '../../data/mapData';\nimport items from '../../data/boxData';\n\nimport { windowHeight, windowWidth } from '../../assets/constants/Dimensions'\n\nconst Card = ({ children, index, marker, translateX, translateY }) => {\n  const pageOffset = windowWidth * index;\n\n  const rStyle = useAnimatedStyle(() => {\n    return {\n      transform: [\n        { translateX: translateX.value + pageOffset },\n        { translateY: translateY.value }\n      ],\n    };\n  });\n\n  return (\n    <Animated.View style={[styles.card, rStyle, { backgroundColor: 'transparent' }]}>\n      <View style={[styles.textContent, { backgroundColor: 'white' }]}>\n        {children}\n        <Text style={styles.cardtitle}>{marker.title}</Text>\n        <View style={styles.rating}><StarRating ratings={marker.rating} reviews={marker.reviews} /></View>\n      </View>\n      <View style={{ height: 220, backgroundColor: 'white' }}>\n      <View style={styles.iconWrapper}>\n      <View style={styles.icon}>\n        <MaterialIcons name='restaurant'/>\n        <Text style={styles.iconText}> RESTAURANT</Text>\n      </View>\n      <View style={styles.icon}>\n        <MaterialIcons name='local-cafe'/>\n        <Text style={styles.iconText}> CAFE</Text>\n      </View>\n      <View style={styles.icon}>\n        <MaterialIcons name='local-mall'/>\n        <Text style={styles.iconText}> MALL</Text>\n      </View>\n      </View>\n        <ScrollView\n          horizontal\n          scrollEventThrottle={16}\n          style={{ marginHorizontal: 20, marginTop:20, marginBottom:10 }}\n        >\n          {markers.map((marker, index) => {\n            return (\n              <View key={index} style={{width: 100, height: 100, borderRadius: 10, overflow: \"hidden\", marginRight:15}}>\n              <Image\n                source={require('../../assets/images/test.png')}\n                style={{height: 100, width:100}}\n                resizeMode=\"cover\"\n              />\n              </View>\n            );\n          })}\n        </ScrollView>\n        <View style={styles.buttonWrapper}>\n          <TouchableOpacity style={[styles.button, {backgroundColor:'#f74d4d'}]}><Text style={[styles.text, {color:'white'}]}>Check-In</Text></TouchableOpacity>\n          <TouchableOpacity style={[styles.button, {backgroundColor:'#007aff'}]}><Text style={[styles.text, {color:'white'}]}>Review</Text></TouchableOpacity>\n        </View>\n      </View>\n      <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n        <View style={{ height: 100, width: 20, backgroundColor: 'white' }}></View>\n        <View style={{ height: 100, width: 20, backgroundColor: 'white' }}></View>\n      </View>\n      <View style={{ zIndex: 4, height: 450, backgroundColor: 'white', paddingTop: 12.5, marginLeft: -2.5, alignSelf: 'center' }}>\n        <WaterfallList items={items} />\n      </View>\n\n    </Animated.View>\n  );\n};\n\nexport default Card;"
		]
	},
	"metadata": {},
	"sourceType": "module"
}
