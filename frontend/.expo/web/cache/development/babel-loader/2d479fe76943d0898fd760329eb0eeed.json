{
	"ast": null,
	"code": "import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MultiSelector(_ref) {\n  var selectionMode = _ref.selectionMode,\n      optionlist = _ref.optionlist,\n      onSelectSwitch = _ref.onSelectSwitch;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      getSelectionMode = _useState2[0],\n      setSelectionMode = _useState2[1];\n\n  var updateSwitchData = function updateSwitchData(value) {\n    if (getSelectionMode.includes(value)) {\n      var updatedItems = getSelectionMode.filter(function (res) {\n        return res !== value;\n      });\n      return setSelectionMode(updatedItems);\n    }\n\n    setSelectionMode([].concat(_toConsumableArray(getSelectionMode), [value]));\n    onSelectSwitch([].concat(_toConsumableArray(getSelectionMode), [value]));\n  };\n\n  return _jsx(View, {\n    style: [styles.listWrapper],\n    children: optionlist.map(function (category, index) {\n      return _jsx(TouchableOpacity, {\n        activeOpacity: 1,\n        onPress: function onPress() {\n          return updateSwitchData(index + 1);\n        },\n        style: {\n          backgroundColor: getSelectionMode.includes(index + 1) ? 'orange' : '#f1f1f1',\n          borderRadius: 5,\n          margin: 5,\n          paddingHorizontal: 15,\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 27\n        },\n        children: _jsx(Text, {\n          style: [styles.listText, getSelectionMode.includes(index + 1) && styles.activeListText],\n          children: category\n        })\n      }, index);\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  listWrapper: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    width: '100%',\n    backgroundColor: 'white',\n    borderRadius: 7,\n    borderColor: '#ad40af'\n  },\n  listText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: 'gray'\n  },\n  activeListText: {\n    color: 'white',\n    borderBottomWidth: 1\n  }\n});",
	"map": {
		"version": 3,
		"sources": [
			"/Users/llh/Documents/map/frontend/components/MultiSelector/index.js"
		],
		"names": [
			"React",
			"useState",
			"MultiSelector",
			"selectionMode",
			"optionlist",
			"onSelectSwitch",
			"getSelectionMode",
			"setSelectionMode",
			"updateSwitchData",
			"value",
			"includes",
			"updatedItems",
			"filter",
			"res",
			"styles",
			"listWrapper",
			"map",
			"category",
			"index",
			"backgroundColor",
			"borderRadius",
			"margin",
			"paddingHorizontal",
			"justifyContent",
			"alignItems",
			"height",
			"listText",
			"activeListText",
			"StyleSheet",
			"create",
			"flexDirection",
			"flexWrap",
			"width",
			"borderColor",
			"fontSize",
			"fontWeight",
			"color",
			"borderBottomWidth"
		],
		"mappings": ";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAGA,eAAe,SAASC,aAAT,OACgB;AAAA,MADSC,aACT,QADSA,aACT;AAAA,MAA9BC,UAA8B,QAA9BA,UAA8B;AAAA,MAAlBC,cAAkB,QAAlBA,cAAkB;;AAC9B,kBAA6CJ,QAAQ,CAAC,EAAD,CAArD;AAAA;AAAA,MAAOK,gBAAP;AAAA,MAAyBC,gBAAzB;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AACnC,QAAIH,gBAAgB,CAACI,QAAjB,CAA0BD,KAA1B,CAAJ,EAAsC;AACrC,UAAME,YAAY,GAAGL,gBAAgB,CAACM,MAAjB,CAAwB,UAAAC,GAAG;AAAA,eAAIA,GAAG,KAAKJ,KAAZ;AAAA,OAA3B,CAArB;AACA,aAAOF,gBAAgB,CAACI,YAAD,CAAvB;AACA;;AACDJ,IAAAA,gBAAgB,8BAAKD,gBAAL,IAAuBG,KAAvB,GAAhB;AACAJ,IAAAA,cAAc,8BAAKC,gBAAL,IAAuBG,KAAvB,GAAd;AACA,GAPD;;AAWA,SACC,KAAC,IAAD;AACC,IAAA,KAAK,EAAE,CAACK,MAAM,CAACC,WAAR,CADR;AAAA,cAGEX,UAAU,CAACY,GAAX,CAAe,UAACC,QAAD,EAAWC,KAAX;AAAA,aACf,KAAC,gBAAD;AAEC,QAAA,aAAa,EAAE,CAFhB;AAGC,QAAA,OAAO,EAAE;AAAA,iBAAMV,gBAAgB,CAACU,KAAK,GAAG,CAAT,CAAtB;AAAA,SAHV;AAIC,QAAA,KAAK,EAAE;AAENC,UAAAA,eAAe,EAAEb,gBAAgB,CAACI,QAAjB,CAA0BQ,KAAK,GAAG,CAAlC,IAAuC,QAAvC,GAAkD,SAF7D;AAGNE,UAAAA,YAAY,EAAE,CAHR;AAINC,UAAAA,MAAM,EAAE,CAJF;AAKNC,UAAAA,iBAAiB,EAAE,EALb;AAMNC,UAAAA,cAAc,EAAE,QANV;AAONC,UAAAA,UAAU,EAAE,QAPN;AAQNC,UAAAA,MAAM,EAAE;AARF,SAJR;AAAA,kBAeC,KAAC,IAAD;AACC,UAAA,KAAK,EAAE,CAACX,MAAM,CAACY,QAAR,EAAkBpB,gBAAgB,CAACI,QAAjB,CAA0BQ,KAAK,GAAG,CAAlC,KAAwCJ,MAAM,CAACa,cAAjE,CADR;AAAA,oBAGEV;AAHF;AAfD,SACMC,KADN,CADe;AAAA,KAAf;AAHF,IADD;AA6BA;AAED,IAAMJ,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAChCd,EAAAA,WAAW,EAAE;AACZe,IAAAA,aAAa,EAAE,KADH;AAEZC,IAAAA,QAAQ,EAAE,MAFE;AAGZR,IAAAA,cAAc,EAAE,cAHJ;AAMZS,IAAAA,KAAK,EAAE,MANK;AAQXb,IAAAA,eAAe,EAAE,OARN;AAQeC,IAAAA,YAAY,EAAE,CAR7B;AAQgCa,IAAAA,WAAW,EAAE;AAR7C,GADmB;AAWhCP,EAAAA,QAAQ,EAAE;AACTQ,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,UAAU,EAAE,MAFH;AAGTC,IAAAA,KAAK,EAAE;AAHE,GAXsB;AAgBhCT,EAAAA,cAAc,EAAE;AACfS,IAAAA,KAAK,EAAE,OADQ;AAEfC,IAAAA,iBAAiB,EAAE;AAFJ;AAhBgB,CAAlB,CAAf",
		"sourcesContent": [
			"import React, { useState } from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity } from 'react-native';\n\nexport default function MultiSelector({ selectionMode,\n\toptionlist, onSelectSwitch }) {\n\tconst [getSelectionMode, setSelectionMode] = useState([]);\n\n\tconst updateSwitchData = (value) => {\n\t\tif (getSelectionMode.includes(value)) {\n\t\t\tconst updatedItems = getSelectionMode.filter(res => res !== value)\n\t\t\treturn setSelectionMode(updatedItems)\n\t\t}\n\t\tsetSelectionMode([...getSelectionMode, value]);\n\t\tonSelectSwitch([...getSelectionMode, value]);\n\t}\n\n\t// console.log(getSelectionMode)\n\n\treturn (\n\t\t<View\n\t\t\tstyle={[styles.listWrapper]}\n\t\t>\n\t\t\t{optionlist.map((category, index) => (\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tkey={index}\n\t\t\t\t\tactiveOpacity={1}\n\t\t\t\t\tonPress={() => updateSwitchData(index + 1)}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t// flex: 1,\n\t\t\t\t\t\tbackgroundColor: getSelectionMode.includes(index + 1) ? 'orange' : '#f1f1f1',\n\t\t\t\t\t\tborderRadius: 5,\n\t\t\t\t\t\tmargin: 5,\n\t\t\t\t\t\tpaddingHorizontal: 15,\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\theight: 27,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={[styles.listText, getSelectionMode.includes(index + 1) && styles.activeListText]}\n\t\t\t\t\t>\n\t\t\t\t\t\t{category}</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t))\n\t\t\t}\n\t\t</View>\n\t)\n}\n\nconst styles = StyleSheet.create({\n\tlistWrapper: {\n\t\tflexDirection: 'row',\n\t\tflexWrap: 'wrap',\n\t\tjustifyContent: 'space-around',\n\t\t// alignItems: 'center',\n\t\t// height: '100%',\n\t\twidth: '100%',\n\t\t \n\t\t backgroundColor: 'white', borderRadius: 7, borderColor: '#ad40af'\n\t},\n\tlistText: {\n\t\tfontSize: 12,\n\t\tfontWeight: 'bold',\n\t\tcolor: 'gray',\n\t},\n\tactiveListText: {\n\t\tcolor: 'white',\n\t\tborderBottomWidth: 1,\n\t\t// textDecorationLine: 'underline'\n\t}\n})"
		]
	},
	"metadata": {},
	"sourceType": "module"
}
