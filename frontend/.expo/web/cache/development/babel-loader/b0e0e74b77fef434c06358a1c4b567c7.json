{
	"ast": null,
	"code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport baseUrl from \"../../assets/constants/BaseUrl\";\nimport Button from \"../../components/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar imageUrl = 'https://expouploads22309-dev.s3.us-east-2.amazonaws.com/public/';\n\nCreate = function Create(props) {\n  var a = [];\n\n  for (var n = 0; n < props.venues[props.venues.length - 1].image_num; n++) {\n    a[n] = 0;\n  }\n\n  var handleSubmit = function handleSubmit() {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            props.createVenues(props.name, props.description, props.latitude, props.longitude, 0);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(TextInput, {\n      placeholder: \" Name\",\n      onChangeText: function onChangeText(text) {\n        props.setName(text);\n      },\n      style: {\n        borderWidth: 2,\n        borderColor: '#000',\n        padding: 10,\n        marginTop: 10\n      }\n    }), _jsx(TextInput, {\n      placeholder: \" Description\",\n      onChangeText: function onChangeText(text) {\n        props.setDescription(text);\n      },\n      style: {\n        borderWidth: 2,\n        borderColor: '#000',\n        padding: 10,\n        marginTop: 10\n      }\n    }), _jsx(Button, {\n      text: props.venues[props.venues.length - 1].id,\n      navigation: function navigation() {\n        handleSubmit();\n      }\n    }), _jsx(View, {\n      style: [styles.searchBox, {\n        zIndex: 2\n      }],\n      children: _jsx(GooglePlacesAutocomplete, {\n        placeholder: \"Search\",\n        minLength: 2,\n        autoFocus: false,\n        returnKeyType: 'search',\n        listViewDisplayed: \"auto\",\n        fetchDetails: true,\n        renderDescription: function renderDescription(row) {\n          return row.description;\n        },\n        onPress: function onPress(data) {\n          var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          console.log('latitude', details.geometry.location.lat);\n          console.log('longitude', details.geometry.location.lng);\n          props.setCoords(details.geometry.location);\n        },\n        getDefaultValue: function getDefaultValue() {\n          return '';\n        },\n        query: {\n          key: 'AIzaSyCANhUvc31mdriYGIh4oLF4G5diQiXokQg',\n          language: 'en'\n        },\n        styles: {\n          textInputContainer: {\n            height: 45\n          },\n          textInput: {\n            backgroundColor: '#ffffff',\n            height: 45,\n            borderRadius: 5,\n            paddingVertical: 5,\n            paddingHorizontal: 10,\n            fontSize: 15,\n            flex: 1\n          }\n        },\n        currentLocationLabel: \"Current location\",\n        nearbyPlacesAPI: \"GooglePlacesSearch\",\n        GoogleReverseGeocodingQuery: {},\n        GooglePlacesSearchQuery: {\n          rankby: 'distance'\n        },\n        debounce: 200\n      })\n    }), _jsx(ScrollView, {\n      horizontal: true,\n      scrollEventThrottle: 16,\n      style: {\n        marginHorizontal: 20,\n        marginTop: 20,\n        marginBottom: 10\n      },\n      children: a.map(function (marker, index) {\n        return _jsx(View, {\n          style: {\n            width: 100,\n            height: 100,\n            borderRadius: 10,\n            overflow: \"hidden\",\n            marginRight: 15\n          },\n          children: _jsx(Image, {\n            source: {\n              uri: 'https://expouploads22309-dev.s3.us-east-2.amazonaws.com/public/venue/' + props.venues[props.venues.length - 1].id + '/' + (index + 1) + '.jpg'\n            },\n            style: {\n              height: 100,\n              width: 100\n            },\n            resizeMode: \"cover\"\n          })\n        }, index);\n      })\n    }), _jsx(View, {\n      style: [styles.buttonWrapper],\n      children: _jsx(Button, {\n        text: \"Upload Image\",\n        navigation: function navigation() {\n          props.navigation.navigate('Upload', {\n            id: props.venues[props.venues.length - 1].id,\n            num: props.venues[props.venues.length - 1].image_num,\n            name: 'venue/' + props.venues[props.venues.length - 1].id + '/' + (props.venues[props.venues.length - 1].image_num + 1)\n          });\n        }\n      })\n    })]\n  });\n};\n\nvar createVenue = function createVenue(name, description, lat, lng, num) {\n  return function _callee(dispatch) {\n    var res;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(baseUrl + \"/venue/add\", {\n              name: name,\n              description: description,\n              latitude: lat,\n              longitude: lng,\n              image_num: num\n            }));\n\n          case 2:\n            res = _context2.sent;\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar getSetName = function getSetName(data) {\n  return {\n    type: 'CREATE_NAME',\n    name: data\n  };\n};\n\nvar getSetDescription = function getSetDescription(data) {\n  return {\n    type: 'CREATE_DESCRIPTION',\n    description: data\n  };\n};\n\nvar getSetCoords = function getSetCoords(data) {\n  return {\n    type: 'CREATE_COORDS',\n    longitude: data.lng,\n    latitude: data.lat\n  };\n};\n\nvar getSetVenue = function getSetVenue(data) {\n  return {\n    type: 'CREATE_IMAGE',\n    venue: data.data\n  };\n};\n\nvar getVenueByID = function getVenueByID(id) {\n  return function _callee2(dispatch) {\n    var res, action;\n    return _regeneratorRuntime.async(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(baseUrl + \"/venue/get/\" + id));\n\n          case 2:\n            res = _context3.sent;\n\n            if (res) {\n              action = getSetVenue(res);\n              dispatch(action);\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar mapState = function mapState(state) {\n  return {\n    venues: state.report.venues,\n    name: state.report.name,\n    description: state.report.description,\n    longitude: state.report.longitude,\n    latitude: state.report.latitude\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    createVenues: function createVenues(name, description, lat, lng, num) {\n      dispatch(createVenue(name, description, lat, lng, num));\n    },\n    setName: function setName(res) {\n      if (res) {\n        var action = getSetName(res);\n        dispatch(action);\n      }\n    },\n    setDescription: function setDescription(res) {\n      if (res) {\n        var action = getSetDescription(res);\n        dispatch(action);\n      }\n    },\n    setCoords: function setCoords(res) {\n      if (res) {\n        var action = getSetCoords(res);\n        dispatch(action);\n      }\n    },\n    getVenuesByID: function getVenuesByID(id) {\n      dispatch(getVenueByID(id));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Create);\nvar styles = StyleSheet.create({\n  buttonWrapper: {\n    position: 'absolute',\n    marginTop: 400\n  },\n  container: {\n    display: 'flex',\n    flex: 1\n  },\n  searchBox: {\n    position: 'absolute',\n    marginTop: 250,\n    paddingLeft: 40,\n    paddingRight: 20,\n    justifyContent: 'center',\n    alignContent: 'center',\n    flexDirection: \"row\",\n    backgroundColor: '#fff',\n    width: '90%',\n    alignSelf: 'center',\n    borderRadius: 20,\n    shadowColor: '#ccc',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10\n  }\n});",
	"map": {
		"version": 3,
		"sources": [
			"/Users/llh/Documents/map/frontend/screens/report-staff-trial/Create.js"
		],
		"names": [
			"React",
			"useState",
			"useEffect",
			"GooglePlacesAutocomplete",
			"connect",
			"axios",
			"baseUrl",
			"Button",
			"imageUrl",
			"Create",
			"props",
			"a",
			"n",
			"venues",
			"length",
			"image_num",
			"handleSubmit",
			"createVenues",
			"name",
			"description",
			"latitude",
			"longitude",
			"flex",
			"text",
			"setName",
			"borderWidth",
			"borderColor",
			"padding",
			"marginTop",
			"setDescription",
			"id",
			"styles",
			"searchBox",
			"zIndex",
			"row",
			"data",
			"details",
			"console",
			"log",
			"geometry",
			"location",
			"lat",
			"lng",
			"setCoords",
			"key",
			"language",
			"textInputContainer",
			"height",
			"textInput",
			"backgroundColor",
			"borderRadius",
			"paddingVertical",
			"paddingHorizontal",
			"fontSize",
			"rankby",
			"marginHorizontal",
			"marginBottom",
			"map",
			"marker",
			"index",
			"width",
			"overflow",
			"marginRight",
			"uri",
			"buttonWrapper",
			"navigation",
			"navigate",
			"num",
			"createVenue",
			"dispatch",
			"post",
			"res",
			"getSetName",
			"type",
			"getSetDescription",
			"getSetCoords",
			"getSetVenue",
			"venue",
			"getVenueByID",
			"get",
			"action",
			"mapState",
			"state",
			"report",
			"mapDispatch",
			"getVenuesByID",
			"StyleSheet",
			"create",
			"position",
			"container",
			"display",
			"paddingLeft",
			"paddingRight",
			"justifyContent",
			"alignContent",
			"flexDirection",
			"alignSelf",
			"shadowColor",
			"shadowOffset",
			"shadowOpacity",
			"shadowRadius",
			"elevation"
		],
		"mappings": "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",
		"sourcesContent": [
			"import React, { useState, useEffect } from \"react\";\nimport { Image, ScrollView, StyleSheet, Text, TextInput, SafeAreaView, View, FlatList } from \"react-native\";\n\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\n\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport baseUrl from '../../assets/constants/BaseUrl'\n\nimport Button from \"../../components/Button\";\n\nconst imageUrl = 'https://expouploads22309-dev.s3.us-east-2.amazonaws.com/public/'\n\nCreate = (props) => {\n\tvar a = [];\n\tfor(var n = 0; n < props.venues[props.venues.length - 1].image_num; n++) a[n] = 0\n\n\t// console.log(props.venues[props.venues.length - 1].id )\n\n\tconst handleSubmit = async () => {\n\t\tprops.createVenues(props.name, props.description, props.latitude, props.longitude, 0)\n\t}\n\n\treturn (\n\t\t<SafeAreaView style={{ flex: 1 }}>\n\t\t\t<TextInput\n\t\t\t\tplaceholder=\" Name\"\n\t\t\t\tonChangeText={(text) => { props.setName(text) }}\n\t\t\t\tstyle={{ borderWidth: 2, borderColor: '#000', padding: 10, marginTop: 10 }}\n\t\t\t/>\n\t\t\t<TextInput\n\t\t\t\tplaceholder=\" Description\"\n\t\t\t\tonChangeText={(text) => { props.setDescription(text) }}\n\t\t\t\tstyle={{ borderWidth: 2, borderColor: '#000', padding: 10, marginTop: 10 }}\n\t\t\t/>\n\t\t\t<Button text={props.venues[props.venues.length - 1].id} navigation={() => { handleSubmit() }} />\n\t\t\t\n\t\t\t<View style={[styles.searchBox, { zIndex: 2 }]}>\n\t\t\t\t<GooglePlacesAutocomplete\n\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\tminLength={2} // minimum length of text to search\n\t\t\t\t\tautoFocus={false}\n\t\t\t\t\treturnKeyType={'search'} // Can be left out for default return key https://facebook.github.io/react-native/docs/textinput.html#returnkeytype\n\t\t\t\t\tlistViewDisplayed=\"auto\" // true/false/undefined\n\t\t\t\t\tfetchDetails={true}\n\t\t\t\t\trenderDescription={row => row.description} // custom description render\n\t\t\t\t\tonPress={(data, details = null) => {\n\t\t\t\t\t\t// console.log('data', data);\n\t\t\t\t\t\tconsole.log('latitude', details.geometry.location.lat);\n\t\t\t\t\t\tconsole.log('longitude', details.geometry.location.lng);\n\t\t\t\t\t\tprops.setCoords(details.geometry.location)\n\t\t\t\t\t}}\n\t\t\t\t\tgetDefaultValue={() => {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}}\n\t\t\t\t\tquery={{\n\t\t\t\t\t\tkey: 'AIzaSyCANhUvc31mdriYGIh4oLF4G5diQiXokQg',\n\t\t\t\t\t\tlanguage: 'en',\n\t\t\t\t\t}}\n\t\t\t\t\tstyles={{\n\t\t\t\t\t\ttextInputContainer: {\n\t\t\t\t\t\t\theight: 45,\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttextInput: {\n\t\t\t\t\t\t\tbackgroundColor: '#ffffff',\n\t\t\t\t\t\t\theight: 45,\n\t\t\t\t\t\t\tborderRadius: 5,\n\t\t\t\t\t\t\tpaddingVertical: 5,\n\t\t\t\t\t\t\tpaddingHorizontal: 10,\n\t\t\t\t\t\t\tfontSize: 15,\n\t\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tcurrentLocationLabel=\"Current location\"\n\t\t\t\t\tnearbyPlacesAPI=\"GooglePlacesSearch\"\n\t\t\t\t\tGoogleReverseGeocodingQuery={{\n\t\t\t\t\t}}\n\t\t\t\t\tGooglePlacesSearchQuery={{\n\t\t\t\t\t\trankby: 'distance',\n\t\t\t\t\t}}\n\t\t\t\t\tdebounce={200}\n\t\t\t\t/>\n\t\t\t</View>\n\n\t\t\t<ScrollView\n          horizontal\n          scrollEventThrottle={16}\n          style={{ marginHorizontal: 20, marginTop:20, marginBottom:10 }}\n        >\n          {a.map((marker, index) => {\n            return (\n              <View key={index} style={{width: 100, height: 100, borderRadius: 10, overflow: \"hidden\", marginRight:15}}>\n              <Image\n                source={{uri :'https://expouploads22309-dev.s3.us-east-2.amazonaws.com/public/venue/' + props.venues[props.venues.length - 1].id + '/' + (index + 1) + '.jpg'}}\n                style={{height: 100, width:100}}\n                resizeMode=\"cover\"\n              />\n              </View>\n            );\n          })}\n        </ScrollView>\n\n\t\t\t<View style={[styles.buttonWrapper]}>\n\t\t\t\t<Button text={\"Upload Image\"} navigation={() => { props.navigation.navigate('Upload', { id: props.venues[props.venues.length - 1].id, num: props.venues[props.venues.length - 1].image_num, name: 'venue/' + props.venues[props.venues.length - 1].id + '/' + (props.venues[props.venues.length - 1].image_num + 1) })}} />\n\t\t\t</View>\n\t\t</SafeAreaView>\n\t);\n}\n\nconst createVenue = (name, description, lat, lng, num) => async dispatch => {\n\tconst res = await axios.post(`${baseUrl}/venue/add`, { name: name, description: description, latitude: lat, longitude: lng, image_num: num })\n};\n\n\nconst getSetName = (data) => {\n\treturn {\n\t\ttype: 'CREATE_NAME',\n\t\tname: data\n\t}\n};\n\nconst getSetDescription = (data) => {\n\treturn {\n\t\ttype: 'CREATE_DESCRIPTION',\n\t\tdescription: data\n\t}\n};\n\nconst getSetCoords = (data) => {\n\treturn {\n\t\ttype: 'CREATE_COORDS',\n\t\tlongitude: data.lng,\n\t\tlatitude: data.lat\n\t}\n};\n\nconst getSetVenue = (data) => {\n\treturn {\n\t\ttype: 'CREATE_IMAGE',\n\t\tvenue: data.data\n\t}\n};\n\nconst getVenueByID = (id) => async dispatch => {\n\tconst res = await axios.get(`${baseUrl}/venue/get/${id}`)\n\tif (res) {\n\t\tconst action = getSetVenue(res)\n\t\tdispatch(action)\n\t}\n};\n\n\nconst mapState = (state) => {\n\t// console.log(state.report.name)\n\t// console.log(state.report.description)\n\t// console.log(state.report.longitude)\n\t// console.log(state.report.venues)\n\n\treturn {\n\t\tvenues: state.report.venues,\n\t\tname: state.report.name,\n\t\tdescription: state.report.description,\n\t\tlongitude: state.report.longitude,\n\t\tlatitude: state.report.latitude,\n\t}\n}\n\nconst mapDispatch = (dispatch) => {\n\treturn {\n\t\tcreateVenues(name, description, lat, lng, num) {\n\t\t\tdispatch(createVenue(name, description, lat, lng, num))\n\t\t},\n\t\tsetName(res) {\n\t\t\tif (res) {\n\t\t\t\tconst action = getSetName(res)\n\t\t\t\tdispatch(action)\n\t\t\t}\n\t\t},\n\t\tsetDescription(res) {\n\t\t\tif (res) {\n\t\t\t\tconst action = getSetDescription(res)\n\t\t\t\tdispatch(action)\n\t\t\t}\n\t\t},\n\t\tsetCoords(res) {\n\t\t\tif (res) {\n\t\t\t\tconst action = getSetCoords(res)\n\t\t\t\tdispatch(action)\n\t\t\t}\n\t\t},\n\t\tgetVenuesByID(id) {\n\t\t\tdispatch(getVenueByID(id))\n\t\t},\n\t}\n}\n\nexport default connect(mapState, mapDispatch)(Create)\n\nconst styles = StyleSheet.create({\n\tbuttonWrapper: {\n\t\tposition: 'absolute',\n\t\tmarginTop: 400,\n\n\t},\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflex: 1\n\t},\n\tsearchBox: {\n\t\tposition: 'absolute',\n\t\tmarginTop: 250,\n\t\tpaddingLeft: 40,\n\t\tpaddingRight: 20,\n\t\tjustifyContent: 'center',\n\t\talignContent: 'center',\n\t\tflexDirection: \"row\",\n\t\tbackgroundColor: '#fff',\n\t\twidth: '90%',\n\t\talignSelf: 'center',\n\t\tborderRadius: 20,\n\t\tshadowColor: '#ccc',\n\t\tshadowOffset: { width: 0, height: 3 },\n\t\tshadowOpacity: 0.5,\n\t\tshadowRadius: 5,\n\t\televation: 10,\n\t},\n});"
		]
	},
	"metadata": {},
	"sourceType": "module"
}
