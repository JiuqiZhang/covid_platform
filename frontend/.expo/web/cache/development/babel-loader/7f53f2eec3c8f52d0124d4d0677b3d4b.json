{
	"ast": null,
	"code": "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Revenue = function (_React$Component) {\n  _inherits(Revenue, _React$Component);\n\n  var _super = _createSuper(Revenue);\n\n  function Revenue(props) {\n    var _this;\n\n    _classCallCheck(this, Revenue);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      categories: [],\n      selected: 'tab1'\n    };\n    _this.handleGetListSucc = _this.handleGetListSucc.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Revenue, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height;\n\n      var rating = \"&#1587;&#1615;&#1576;&#1618;\";\n      var result = null;\n\n      if (this.state.selected === 'tab1') {\n        result = _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Image, {\n            source: require(\"../../resource/imgs/banner.png\"),\n            style: styles.image\n          }), _jsx(TextInput, {\n            placeholder: \"Search Revenue\",\n            style: styles.input\n          }), _jsx(ScrollView, {\n            style: styles.content,\n            children: _jsx(View, {\n              style: styles.list,\n              children: this.state.categories.map(function (item) {\n                return _jsx(TouchableWithoutFeedback, {\n                  onPress: _this2.handleItemClick.bind(_this2, item.id),\n                  children: _jsxs(View, {\n                    style: styles.item,\n                    children: [_jsx(Image, {\n                      source: {\n                        uri: item.imgUrl\n                      },\n                      style: {\n                        width: (width - 20) / 3 - 20,\n                        height: (width - 20) / 3 - 20,\n                        borderRadius: 10,\n                        marginLeft: 5\n                      }\n                    }), _jsxs(View, {\n                      children: [_jsx(Text, {\n                        style: styles.text,\n                        children: item.title\n                      }), _jsxs(View, {\n                        style: {\n                          display: 'flex',\n                          flexDirection: 'row'\n                        },\n                        children: [_jsx(Text, {\n                          style: styles.rating,\n                          children: \"Average Rating:\"\n                        }), _jsx(Text, {\n                          style: styles.rating2,\n                          children: \"\\u2605\\u2605\\u2605\\u2605\\u2606\"\n                        })]\n                      }), _jsxs(View, {\n                        style: {\n                          display: 'flex',\n                          flexDirection: 'row'\n                        },\n                        children: [_jsx(Text, {\n                          style: styles.rating,\n                          children: \"Infection Level:\"\n                        }), _jsx(Text, {\n                          style: styles.rating3,\n                          children: \"\\u2605\\u2605\\u2606\\u2606\\u2606\"\n                        })]\n                      })]\n                    })]\n                  })\n                }, item.id);\n              })\n            })\n          })]\n        });\n      } else {\n        result = _jsx(View, {\n          children: _jsx(Text, {\n            children: \"Test\"\n          })\n        });\n      }\n\n      return result;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch('http://www.llh.com/api/index.json').then(function (res) {\n        return res.json();\n      }).then(this.handleGetListSucc).catch(function () {\n        alert('Request failed');\n      });\n    }\n  }, {\n    key: \"handleGetListSucc\",\n    value: function handleGetListSucc(res) {\n      if (res.ret && res.data) {\n        this.setState({\n          categories: res.data.categories\n        });\n      }\n    }\n  }, {\n    key: \"handleItemClick\",\n    value: function handleItemClick(id) {\n      this.props.navigate('List', {\n        id: id\n      });\n    }\n  }]);\n\n  return Revenue;\n}(React.Component);\n\nexport { Revenue as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f1f1f1'\n  },\n  image: {\n    width: '100%',\n    height: '27%'\n  },\n  input: {\n    position: 'absolute',\n    backgroundColor: '#ffffff',\n    left: 0,\n    right: 0,\n    height: 30,\n    paddingLeft: 10,\n    top: 150\n  },\n  content: {\n    flex: 1,\n    backgroundColor: '#ffffff',\n    marginTop: 35,\n    marginBottom: 5,\n    marginLeft: 5,\n    borderRadius: 5\n  },\n  list: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap',\n    marginTop: 10,\n    marginBottom: 10\n  },\n  item: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginLeft: 10,\n    marginBottom: 10\n  },\n  text: {\n    marginLeft: 25,\n    marginTop: 10,\n    marginBottom: 5,\n    fontFamily: 'Verdana',\n    fontSize: 15,\n    fontWeight: '500'\n  },\n  rating: {\n    marginLeft: 25,\n    marginTop: 10,\n    fontFamily: 'Verdana',\n    fontSize: 12,\n    fontWeight: '400'\n  },\n  rating2: {\n    marginLeft: 10,\n    marginTop: 10,\n    fontSize: 12,\n    fontWeight: '400',\n    color: '#ff9933'\n  },\n  rating3: {\n    marginLeft: 12,\n    marginTop: 10,\n    fontSize: 12,\n    fontWeight: '400',\n    color: 'purple'\n  }\n});",
	"map": {
		"version": 3,
		"sources": ["/Users/llh/Documents/map/view/revenue/View.js"],
		"names": [
			"React",
			"Revenue",
			"props",
			"state",
			"categories",
			"selected",
			"handleGetListSucc",
			"bind",
			"Dimensions",
			"get",
			"width",
			"height",
			"rating",
			"result",
			"styles",
			"container",
			"require",
			"image",
			"input",
			"content",
			"list",
			"map",
			"item",
			"handleItemClick",
			"id",
			"uri",
			"imgUrl",
			"borderRadius",
			"marginLeft",
			"text",
			"title",
			"display",
			"flexDirection",
			"rating2",
			"rating3",
			"fetch",
			"then",
			"res",
			"json",
			"catch",
			"alert",
			"ret",
			"data",
			"setState",
			"navigate",
			"Component",
			"StyleSheet",
			"create",
			"flex",
			"backgroundColor",
			"position",
			"left",
			"right",
			"paddingLeft",
			"top",
			"marginTop",
			"marginBottom",
			"flexWrap",
			"fontFamily",
			"fontSize",
			"fontWeight",
			"color"
		],
		"mappings": "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",
		"sourcesContent": [
			"import React from 'react'\nimport { View, StyleSheet, Text, Image, TextInput, ScrollView, Dimensions, TouchableWithoutFeedback } from 'react-native'\n\nexport default class Revenue extends React.Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n        categories: [],\n        selected: 'tab1'\n      }\n      this.handleGetListSucc = this.handleGetListSucc.bind(this)\n      // this.handleItemClick = this.handleItemClick.bind(this)\n    }\n  \n    render() {\n      const { width, height } = Dimensions.get('window')\n      const rating = \"&#1587;&#1615;&#1576;&#1618;\"\n      let result = null\n      if (this.state.selected === 'tab1') {\n        result = (\n          <View style={styles.container}>\n          <Image \n            source={require('../../resource/imgs/banner.png')}\n            style={styles.image}\n          />\n          <TextInput \n            placeholder=\"Search Revenue\"\n            style={styles.input}\n          />\n          <ScrollView\n            style={styles.content}>\n            <View \n              style={styles.list}>\n              {\n                this.state.categories.map((item) => {\n                  return (\n                    <TouchableWithoutFeedback\n                     key={item.id}\n                     onPress={this.handleItemClick.bind(this, item.id)}\n                    >\n                    <View \n                      style={styles.item}>\n                      <Image \n                        source={{uri: item.imgUrl}}\n                        // source={require('../../resource/imgs/banner.png')}\n                        style={{width: (width - 20) / 3 - 20, height: (width - 20) / 3 - 20, borderRadius: 10, marginLeft: 5}}\n                      />\n                    <View>\n                      <Text style={styles.text}>{item.title}</Text>\n                      <View style={{display: 'flex',flexDirection: 'row'}}><Text style={styles.rating}>Average Rating:</Text><Text style={styles.rating2}>★★★★☆</Text></View>\n                      <View style={{display: 'flex',flexDirection: 'row'}}><Text style={styles.rating}>Infection Level:</Text><Text style={styles.rating3}>★★☆☆☆</Text></View>\n                    </View>\n                    </View>\n                    </TouchableWithoutFeedback>\n                  )\n                })\n              }\n            </View>\n          </ScrollView>\n          {/* <View style={{display: 'flex', flexDirection: 'row'}}>\n            <TouchableWithoutFeedback onPress={()=>{this.setState({selected:'tab1'})}}>\n              <Text style={{flex: 1}}>Revenue</Text>\n            </TouchableWithoutFeedback>\n            <TouchableWithoutFeedback onPress={()=>{this.setState({selected:'tab2'})}}>\n              <Text style={{flex: 1}}>Map</Text>\n            </TouchableWithoutFeedback>\n          </View> */}\n        </View>\n        )\n      } else {\n        result = (\n          <View>\n          <Text>Test</Text>\n                  {/* <View style={{display: 'flex', flexDirection: 'row'}}>\n            <TouchableWithoutFeedback onPress={()=>{this.setState({selected:'tab1'})}}>\n              <Text style={{flex: 1}}>Revenue</Text>\n            </TouchableWithoutFeedback>\n            <TouchableWithoutFeedback onPress={()=>{this.setState({selected:'tab2'})}}>\n              <Text style={{flex: 1}}>Map</Text>\n            </TouchableWithoutFeedback>\n          </View> */}\n          </View>\n        )\n      }\n      return result\n    }\n  \n    componentDidMount() {\n      fetch('http://www.llh.com/api/index.json')\n        .then((res) => res.json())\n        .then(this.handleGetListSucc)\n        .catch(() => {alert('Request failed')})\n    }\n  \n    handleGetListSucc(res) {\n      if(res.ret && res.data) {\n        this.setState({\n          categories: res.data.categories\n        })\n      }\n      // alert(JSON.stringify(res))\n    }\n\n    handleItemClick(id) {\n      // alert(id)\n      // const { navigate } = this.props.navigation;\n      // navigate('List', { id: '0001' })\n      this.props.navigate('List', { id: id })\n    }\n  \n  }\n  \n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#f1f1f1'\n    },\n    image: {\n      width: '100%',\n      height: '27%'\n    },\n    input: {\n      position: 'absolute',\n      backgroundColor: '#ffffff',\n      left: 0,\n      right: 0,\n      height: 30,\n      paddingLeft: 10,\n      top: 150\n    },\n    content: {\n      flex: 1,\n      backgroundColor: '#ffffff',\n      marginTop: 35,\n      marginBottom: 5,\n      marginLeft: 5,\n      borderRadius: 5\n    },\n    list: {\n      display: 'flex',\n      flexDirection: 'column',\n      flexWrap: 'wrap',\n      marginTop: 10,\n      marginBottom: 10,\n    },\n    item: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      marginLeft: 10,\n      marginBottom: 10,\n    },\n    text: {\n      marginLeft: 25,\n      marginTop: 10,\n      marginBottom: 5,\n      fontFamily: 'Verdana',\n      fontSize: 15,\n      fontWeight: '500',\n    },\n    rating: {\n        marginLeft: 25,\n        marginTop: 10,\n        fontFamily: 'Verdana',\n        fontSize: 12,\n        fontWeight: '400',\n      },\n      rating2: {\n        marginLeft: 10,\n        marginTop: 10,\n        fontSize: 12,\n        fontWeight: '400',\n        color: '#ff9933'\n      },\n      rating3: {\n        marginLeft: 12,\n        marginTop: 10,\n        fontSize: 12,\n        fontWeight: '400',\n        color: 'purple'\n      }\n  })"
		]
	},
	"metadata": {},
	"sourceType": "module"
}
