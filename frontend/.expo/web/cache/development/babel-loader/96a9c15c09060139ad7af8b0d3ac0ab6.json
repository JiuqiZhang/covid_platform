{
	"ast": null,
	"code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Auth from \"@aws-amplify/auth\";\nimport Amplify from \"@aws-amplify/core\";\nimport Storage from \"@aws-amplify/storage\";\nimport * as Clipboard from \"expo-clipboard\";\nimport Constants from \"expo-constants\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport awsconfig from \"../../datacenter/aws-exports\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nAmplify.configure(awsconfig);\nexport default function FileModule(_ref) {\n  var _this = this;\n\n  var _ref$name = _ref.name,\n      name = _ref$name === void 0 ? \"mydemo.jpg\" : _ref$name;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      percentage = _useState4[0],\n      setPercentage = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var cameraRollStatus, cameraStatus;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!Constants.platform.ios) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              cameraRollStatus = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n            case 6:\n              cameraStatus = _context.sent;\n\n              if (cameraRollStatus.status !== \"granted\" || cameraStatus.status !== \"granted\") {\n                alert(\"Sorry, we need these permissions to make this work!\");\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var takePhoto = function takePhoto() {\n    var result;\n    return _regeneratorRuntime.async(function takePhoto$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: \"Images\",\n              aspect: [4, 3]\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            _this.handleImagePicked(result);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: \"Images\",\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context3.sent;\n\n            _this.handleImagePicked(result);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  handleImagePicked = function handleImagePicked(pickerResult) {\n    var img, uploadUrl;\n    return _regeneratorRuntime.async(function handleImagePicked$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n\n            if (!pickerResult.cancelled) {\n              _context4.next = 6;\n              break;\n            }\n\n            alert(\"Upload cancelled\");\n            return _context4.abrupt(\"return\");\n\n          case 6:\n            setPercentage(0);\n            _context4.next = 9;\n            return _regeneratorRuntime.awrap(fetchImageFromUri(pickerResult.uri));\n\n          case 9:\n            img = _context4.sent;\n            _context4.next = 12;\n            return _regeneratorRuntime.awrap(uploadImage(name, img));\n\n          case 12:\n            uploadUrl = _context4.sent;\n            console.log(uploadUrl);\n            downloadImage(uploadUrl);\n\n          case 15:\n            _context4.next = 21;\n            break;\n\n          case 17:\n            _context4.prev = 17;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n            alert(\"Upload failed\");\n\n          case 21:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 17]], Promise);\n  };\n\n  uploadImage = function uploadImage(filename, img) {\n    Auth.currentCredentials();\n    return Storage.put(filename, img, {\n      level: \"public\",\n      contentType: \"image/jpeg\",\n      progressCallback: function progressCallback(progress) {\n        setLoading(progress);\n      }\n    }).then(function (response) {\n      return response.key;\n    }).catch(function (error) {\n      console.log(error);\n      return error.response;\n    });\n  };\n\n  var setLoading = function setLoading(progress) {\n    var calculated = parseInt(progress.loaded / progress.total * 100);\n    updatePercentage(calculated);\n  };\n\n  var updatePercentage = function updatePercentage(number) {\n    setPercentage(number);\n  };\n\n  downloadImage = function downloadImage(uri) {\n    Storage.get(uri).then(function (result) {\n      setImage(result);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n\n  var fetchImageFromUri = function fetchImageFromUri(uri) {\n    var response, blob;\n    return _regeneratorRuntime.async(function fetchImageFromUri$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 2:\n            response = _context5.sent;\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 5:\n            blob = _context5.sent;\n            return _context5.abrupt(\"return\", blob);\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var copyToClipboard = function copyToClipboard() {\n    Clipboard.setString(image);\n    alert(\"Copied image URL to clipboard\");\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [percentage !== 0 && _jsxs(Text, {\n      style: styles.percentage,\n      children: [percentage, \"%\"]\n    }), image && _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.result,\n        onPress: copyToClipboard,\n        children: _jsx(Image, {\n          source: {\n            uri: image\n          },\n          style: {\n            width: 250,\n            height: 250\n          }\n        })\n      }), _jsx(Text, {\n        style: styles.info,\n        children: \"Long press to copy the image url\"\n      })]\n    }), _jsx(Button, {\n      onPress: pickImage,\n      title: \"Pick an image from camera roll\"\n    }), _jsx(Button, {\n      onPress: takePhoto,\n      title: \"Take a photo\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#F5FCFF\"\n  },\n  title: {\n    fontSize: 20,\n    marginBottom: 20,\n    textAlign: \"center\",\n    marginHorizontal: 15\n  },\n  percentage: {\n    marginBottom: 10\n  },\n  result: {\n    paddingTop: 5\n  },\n  info: {\n    textAlign: \"center\",\n    marginBottom: 20\n  }\n});",
	"map": {
		"version": 3,
		"sources": [
			"/Users/llh/Documents/map/frontend/screens/report-user/View.js"
		],
		"names": [
			"Auth",
			"Amplify",
			"Storage",
			"Clipboard",
			"Constants",
			"ImagePicker",
			"useEffect",
			"useState",
			"awsconfig",
			"configure",
			"FileModule",
			"name",
			"image",
			"setImage",
			"percentage",
			"setPercentage",
			"platform",
			"ios",
			"requestMediaLibraryPermissionsAsync",
			"cameraRollStatus",
			"requestCameraPermissionsAsync",
			"cameraStatus",
			"status",
			"alert",
			"takePhoto",
			"launchCameraAsync",
			"mediaTypes",
			"aspect",
			"result",
			"handleImagePicked",
			"pickImage",
			"launchImageLibraryAsync",
			"quality",
			"pickerResult",
			"cancelled",
			"fetchImageFromUri",
			"uri",
			"img",
			"uploadImage",
			"uploadUrl",
			"console",
			"log",
			"downloadImage",
			"filename",
			"currentCredentials",
			"put",
			"level",
			"contentType",
			"progressCallback",
			"progress",
			"setLoading",
			"then",
			"response",
			"key",
			"catch",
			"error",
			"calculated",
			"parseInt",
			"loaded",
			"total",
			"updatePercentage",
			"number",
			"get",
			"err",
			"fetch",
			"blob",
			"copyToClipboard",
			"setString",
			"styles",
			"container",
			"width",
			"height",
			"info",
			"StyleSheet",
			"create",
			"justifyContent",
			"alignItems",
			"backgroundColor",
			"title",
			"fontSize",
			"marginBottom",
			"textAlign",
			"marginHorizontal",
			"paddingTop"
		],
		"mappings": "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",
		"sourcesContent": [
			"import Auth from \"@aws-amplify/auth\";\nimport Amplify from \"@aws-amplify/core\";\nimport Storage from \"@aws-amplify/storage\";\nimport * as Clipboard from \"expo-clipboard\";\nimport Constants from \"expo-constants\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { useEffect, useState } from \"react\";\nimport { Button, Image, StyleSheet, Text, View } from \"react-native\";\n\nimport awsconfig from \"../../datacenter/aws-exports\";\n\nAmplify.configure(awsconfig);\n\nexport default function FileModule({ name=\"mydemo.jpg\" }) {\n  const [image, setImage] = useState(null);\n  const [percentage, setPercentage] = useState(0);\n\n  useEffect(() => {\n    (async () => {\n      if (Constants.platform.ios) {\n        const cameraRollStatus =\n          await ImagePicker.requestMediaLibraryPermissionsAsync();\n        const cameraStatus = await ImagePicker.requestCameraPermissionsAsync();\n        if (\n          cameraRollStatus.status !== \"granted\" ||\n          cameraStatus.status !== \"granted\"\n        ) {\n          alert(\"Sorry, we need these permissions to make this work!\");\n        }\n      }\n    })();\n  }, []);\n\n  const takePhoto = async () => {\n    let result = await ImagePicker.launchCameraAsync({\n      mediaTypes: \"Images\",\n      aspect: [4, 3],\n    });\n\n    this.handleImagePicked(result);\n  };\n\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: \"Images\",\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    this.handleImagePicked(result);\n  };\n\n  handleImagePicked = async (pickerResult) => {\n    try {\n      if (pickerResult.cancelled) {\n        alert(\"Upload cancelled\");\n        return;\n      } else {\n        setPercentage(0);\n        const img = await fetchImageFromUri(pickerResult.uri);\n        const uploadUrl = await uploadImage(name, img);\n        console.log(uploadUrl)\n        downloadImage(uploadUrl);\n      }\n    } catch (e) {\n      console.log(e);\n      alert(\"Upload failed\");\n    }\n  };\n\n  uploadImage = (filename, img) => {\n    Auth.currentCredentials();\n\n    return Storage.put(filename, img, {\n      level: \"public\",\n      contentType: \"image/jpeg\",\n      progressCallback(progress) {\n        setLoading(progress);\n      },\n    })\n      .then((response) => {\n        return response.key;\n      })\n      .catch((error) => {\n        console.log(error);\n        return error.response;\n      });\n  };\n\n  const setLoading = (progress) => {\n    const calculated = parseInt((progress.loaded / progress.total) * 100);\n    updatePercentage(calculated); // due to s3 put function scoped\n  };\n\n  const updatePercentage = (number) => {\n    setPercentage(number);\n  };\n\n  downloadImage = (uri) => {\n    Storage.get(uri)\n      .then((result) => {setImage(result)})\n      .catch((err) => console.log(err));\n  };\n\n  const fetchImageFromUri = async (uri) => {\n    const response = await fetch(uri);\n    const blob = await response.blob();\n    return blob;\n  };\n\n  const copyToClipboard = () => {\n    Clipboard.setString(image);\n    alert(\"Copied image URL to clipboard\");\n  };\n\n  return (\n    <View style={styles.container}>\n      {percentage !== 0 && <Text style={styles.percentage}>{percentage}%</Text>}\n      {image && (\n        <View>\n          <Text style={styles.result} onPress={copyToClipboard}>\n            <Image\n              source={{ uri: image }}\n              style={{ width: 250, height: 250 }}\n            />\n          </Text>\n          <Text style={styles.info}>Long press to copy the image url</Text>\n        </View>\n      )}\n\n      <Button onPress={pickImage} title=\"Pick an image from camera roll\" />\n      <Button onPress={takePhoto} title=\"Take a photo\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#F5FCFF\",\n  },\n  title: {\n    fontSize: 20,\n    marginBottom: 20,\n    textAlign: \"center\",\n    marginHorizontal: 15,\n  },\n  percentage: {\n    marginBottom: 10,\n  },\n  result: {\n    paddingTop: 5,\n  },\n  info: {\n    textAlign: \"center\",\n    marginBottom: 20,\n  },\n});\n"
		]
	},
	"metadata": {},
	"sourceType": "module"
}
