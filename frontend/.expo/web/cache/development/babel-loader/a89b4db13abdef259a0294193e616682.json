{
	"ast": null,
	"code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"./style\";\nimport Animated from 'react-native-reanimated';\nimport Carousel from 'react-native-snap-carousel';\nimport Feather from \"@expo/vector-icons/Feather\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport BannerSlider from \"../../../components/BannerSlider\";\nimport CustomSwitch from \"../../../components/RadioSwitch\";\nimport MultiSelector from \"../../../components/MultiSelector\";\nimport MultiCheckbox from \"../../../components/MultiCheckbox\";\nimport SingleCheckbox from \"../../../components/SingleCheckbox\";\nimport StarRating from \"../../../components/Rating\";\nimport sliderData from \"../../../data/venueData\";\nimport Accordion from \"../../../components/Accordion\";\nimport { windowWidth, windowHeight } from \"../../../assets/constants/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Venue(props) {\n  var _useState = useState(new Animated.Value(0)),\n      _useState2 = _slicedToArray(_useState, 2),\n      scrollY = _useState2[0],\n      setScrollY = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mode = _useState4[0],\n      setMode = _useState4[1];\n\n  var childFunc = useRef(null);\n  useEffect(function () {\n    props.getVenuesInfo();\n  });\n\n  var getHeaderY = function getHeaderY(mode) {\n    if (mode === 2) {\n      return 0;\n    } else {\n      return Animated.interpolateNode(scrollY, {\n        inputRange: [0, 100],\n        outputRange: [100, 0],\n        extrapolate: 'clamp'\n      });\n    }\n  };\n\n  var setModeFunc = function setModeFunc() {\n    if (mode === 1) {\n      setMode(2);\n    } else {\n      setMode(1);\n    }\n  };\n\n  var multiSet = function multiSet() {\n    setModeFunc();\n    childFunc.current();\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: {\n      padding: 20,\n      marginLeft: 5,\n      marginRight: 5\n    },\n    children: [_jsxs(View, {\n      style: styles.profile,\n      children: [_jsxs(View, {\n        style: {\n          justifyContent: 'left',\n          flexDirection: 'row'\n        },\n        children: [_jsx(Feather, {\n          name: \"map-pin\",\n          size: 17,\n          color: 'black',\n          style: {\n            marginTop: 1\n          }\n        }), _jsx(Text, {\n          style: styles.name,\n          children: \" Times Square\"\n        })]\n      }), _jsx(Ionicons, {\n        name: \"ios-notifications-outline\",\n        size: 20,\n        color: 'black',\n        style: {\n          marginTop: 0\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.search,\n      children: [_jsx(Feather, {\n        name: \"search\",\n        size: 20,\n        color: \"#c6c6c6\",\n        style: {\n          marginRight: 5\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Search\"\n      })]\n    }), _jsx(Animated.View, {\n      style: {\n        height: getHeaderY(mode)\n      },\n      children: _jsx(Carousel, {\n        data: sliderData,\n        renderItem: renderBanner,\n        sliderWidth: windowWidth - 10,\n        itemWidth: 300,\n        loop: true,\n        containerCustomStyle: {\n          flex: 1\n        },\n        slideStyle: {\n          flex: 1\n        }\n      })\n    }), _jsx(View, {\n      style: {\n        marginTop: 10,\n        marginRight: 35,\n        marginBottom: 10,\n        justifyContent: 'space-between',\n        flexDirection: 'row'\n      },\n      children: _jsx(CustomSwitch, {\n        selectionMode: 1,\n        optionlist: [\"Safest\", \"Nearest\", \"Rating\", \"#Visit\"],\n        onSelectSwitch: props.setTab\n      })\n    }), _jsxs(Accordion, {\n      childFunc: childFunc,\n      press: setModeFunc,\n      children: [_jsx(View, {\n        style: styles.subtitle,\n        children: _jsx(Text, {\n          style: styles.subtitleText,\n          children: \"RATING\"\n        })\n      }), _jsx(MultiSelector, {\n        selectionMode: [1],\n        optionlist: [\"1 Star\", \"2 Star\", \"3 Star\", \"4 Star\", \"5 Star\"],\n        onSelectSwitch: function onSelectSwitch() {}\n      }), _jsx(View, {\n        style: styles.subtitle,\n        children: _jsx(Text, {\n          style: styles.subtitleText,\n          children: \"CATERGORY\"\n        })\n      }), _jsx(MultiSelector, {\n        selectionMode: [1],\n        optionlist: [\"Restaurant\", \"Gym\", \"Library\", \"Shopping Center\", \"Hotel\", \"Museum\", \"Theater\", \"Station\", \"KTV\"],\n        onSelectSwitch: function onSelectSwitch() {}\n      }), _jsx(Text, {\n        children: \"DISTANCE\"\n      }), _jsx(Text, {\n        children: \"\\\"sliderbar\\\"\"\n      }), _jsx(Text, {\n        children: \"Hours\"\n      }), _jsx(Text, {\n        children: \"\\\"time-picker\\\"\"\n      }), _jsxs(View, {\n        style: styles.buttonWrapper,\n        children: [_jsx(TouchableOpacity, {\n          onPress: multiSet,\n          children: _jsx(View, {\n            style: styles.button1,\n            children: _jsx(Text, {\n              style: styles.buttonText1,\n              children: \"RESET\"\n            })\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: multiSet,\n          children: _jsx(View, {\n            style: styles.button2,\n            children: _jsx(Text, {\n              style: styles.buttonText2,\n              children: \"CONFIRM\"\n            })\n          })\n        })]\n      })]\n    }), _jsx(Animated.FlatList, {\n      scrollEventThrottle: 16,\n      onScroll: Animated.event([{\n        nativeEvent: {\n          contentOffset: {\n            y: scrollY\n          }\n        }\n      }]),\n      style: {\n        top: -35\n      },\n      showsVerticalScrollIndicator: false,\n      data: props.tab == 1 && props.categories,\n      keyExtractor: function keyExtractor(item, index) {\n        return index;\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            props.navigation.navigate('List', {\n              id: 4,\n              venue_name: item.name,\n              venue_desciption: item.description\n            });\n          },\n          children: _jsxs(View, {\n            style: [styles.card],\n            children: [_jsx(Image, {\n              source: require(\"../../../assets/images/test.png\"),\n              style: styles.image\n            }), _jsxs(View, {\n              style: [styles.cardText],\n              children: [_jsxs(View, {\n                style: styles.titleWrapper,\n                children: [_jsx(Text, {\n                  style: styles.title,\n                  children: item.name\n                }), _jsx(StarRating, {\n                  style: styles.starRating,\n                  ratings: 3,\n                  reviews: 79\n                })]\n              }), _jsxs(View, {\n                style: [styles.textWrapper],\n                children: [_jsx(Feather, {\n                  name: \"map-pin\",\n                  size: 13,\n                  color: 'gray'\n                }), _jsx(Text, {\n                  style: styles.text,\n                  children: \"  2.2 km\"\n                }), _jsx(Text, {\n                  style: styles.text,\n                  children: \"  |  \"\n                }), _jsx(Feather, {\n                  name: \"calendar\",\n                  size: 13,\n                  color: 'gray'\n                }), _jsx(Text, {\n                  style: styles.text,\n                  children: \"  5am - 10pm\"\n                })]\n              }), _jsxs(View, {\n                style: [styles.textWrapper],\n                children: [_jsx(Feather, {\n                  name: \"list\",\n                  size: 13,\n                  color: 'gray'\n                }), _jsx(Text, {\n                  style: styles.text,\n                  children: \"  Restaurant, Bar\"\n                })]\n              }), _jsxs(View, {\n                style: styles.detailWrapper,\n                children: [_jsx(View, {\n                  style: styles.detail,\n                  children: _jsx(Text, {\n                    style: styles.info,\n                    children: \"   # OF VISIT: 25   \"\n                  })\n                }), _jsx(View, {\n                  style: styles.detail,\n                  children: _jsx(Text, {\n                    style: styles.info,\n                    children: \"   # OF CASES: 0   \"\n                  })\n                })]\n              })]\n            })]\n          })\n        });\n      }\n    })]\n  });\n}\n\nvar renderBanner = function renderBanner(_ref2) {\n  var item = _ref2.item,\n      index = _ref2.index;\n  return _jsx(BannerSlider, {\n    data: item\n  });\n};",
	"map": {
		"version": 3,
		"sources": ["/Users/llh/Documents/map/frontend/screens/view/venue/UI.js"],
		"names": [
			"React",
			"useState",
			"useEffect",
			"useRef",
			"useCallback",
			"styles",
			"Animated",
			"Carousel",
			"Feather",
			"Ionicons",
			"BannerSlider",
			"CustomSwitch",
			"MultiSelector",
			"MultiCheckbox",
			"SingleCheckbox",
			"StarRating",
			"sliderData",
			"Accordion",
			"windowWidth",
			"windowHeight",
			"Venue",
			"props",
			"Value",
			"scrollY",
			"setScrollY",
			"mode",
			"setMode",
			"childFunc",
			"getVenuesInfo",
			"getHeaderY",
			"interpolateNode",
			"inputRange",
			"outputRange",
			"extrapolate",
			"setModeFunc",
			"multiSet",
			"current",
			"padding",
			"marginLeft",
			"marginRight",
			"profile",
			"justifyContent",
			"flexDirection",
			"marginTop",
			"name",
			"search",
			"height",
			"renderBanner",
			"flex",
			"marginBottom",
			"setTab",
			"subtitle",
			"subtitleText",
			"buttonWrapper",
			"button1",
			"buttonText1",
			"button2",
			"buttonText2",
			"event",
			"nativeEvent",
			"contentOffset",
			"y",
			"top",
			"tab",
			"categories",
			"item",
			"index",
			"navigation",
			"navigate",
			"id",
			"venue_name",
			"venue_desciption",
			"description",
			"card",
			"require",
			"image",
			"cardText",
			"titleWrapper",
			"title",
			"starRating",
			"textWrapper",
			"text",
			"detailWrapper",
			"detail",
			"info"
		],
		"mappings": "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",
		"sourcesContent": [
			"import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { SafeAreaView, View, Text, Image, TextInput, FlatList, TouchableOpacity } from 'react-native'\nimport styles from './style'\n\nimport Animated from 'react-native-reanimated'\n\nimport Carousel from 'react-native-snap-carousel'\nimport Feather from 'react-native-vector-icons/Feather'\nimport Ionicons from 'react-native-vector-icons/Ionicons'\n\nimport BannerSlider from '../../../components/BannerSlider'\nimport CustomSwitch from '../../../components/RadioSwitch'\nimport MultiSelector from '../../../components/MultiSelector'\nimport MultiCheckbox from '../../../components/MultiCheckbox'\nimport SingleCheckbox from '../../../components/SingleCheckbox'\nimport StarRating from '../../../components/Rating'\nimport sliderData from '../../../data/venueData'\nimport Accordion from '../../../components/Accordion'\nimport { windowWidth, windowHeight } from '../../../assets/constants/Dimensions'\n\nexport default function Venue(props) {\n  const [scrollY, setScrollY] = useState(new Animated.Value(0));\n  const [mode, setMode] = useState(1);\n  const childFunc = useRef(null);\n\n  useEffect(() => {\n    props.getVenuesInfo();\n  });\n\n  const getHeaderY = (mode) => {\n    if (mode === 2) {\n      return 0\n    } else {\n      return Animated.interpolateNode(scrollY, {\n        inputRange: [0, 100],\n        outputRange: [100, 0],\n        extrapolate: 'clamp'\n      })\n    }\n  }\n\n  const setModeFunc = () => {\n    if (mode === 1) {\n      setMode(2)\n    } else {\n      setMode(1)\n    }\n  }\n\n  const multiSet = () => {\n    setModeFunc();\n    childFunc.current();\n    // console.log(childFunc.current)\n    // refs.Accordion.startAnimation();\n  }\n\n\n  return (\n    <SafeAreaView style={{ padding: 20, marginLeft: 5, marginRight: 5 }}>\n      <View style={styles.profile}>\n        <View style={{ justifyContent: 'left', flexDirection: 'row' }}>\n          <Feather name=\"map-pin\" size={17} color={'black'} style={{ marginTop: 1 }} />\n          <Text style={styles.name}> Times Square</Text>\n        </View>\n        <Ionicons name=\"ios-notifications-outline\" size={20} color={'black'} style={{ marginTop: 0 }} />\n      </View>\n      <View style={styles.search}>\n        <Feather\n          name=\"search\"\n          size={20}\n          color='#c6c6c6'\n          style={{ marginRight: 5 }}\n        />\n        <TextInput\n          placeholder=\"Search\"\n        />\n      </View>\n\n      <Animated.View style={{ height: getHeaderY(mode) }}>\n        <Carousel\n          data={sliderData}\n          renderItem={renderBanner}\n          sliderWidth={windowWidth - 10}\n          itemWidth={300}\n          loop={true}\n          containerCustomStyle={{ flex: 1 }}\n          slideStyle={{ flex: 1 }}\n        />\n      </Animated.View>\n\n      <View style={{ marginTop: 10, marginRight: 35, marginBottom: 10, justifyContent: 'space-between', flexDirection: 'row' }}>\n        <CustomSwitch\n          selectionMode={1}\n          optionlist={[\"Safest\", \"Nearest\", \"Rating\", \"#Visit\"]}\n          onSelectSwitch={props.setTab}\n        />\n      </View>\n\n      {/* <TouchableOpacity onPress={this.setMode}> */}\n      <Accordion childFunc={childFunc} press={setModeFunc}>\n        <View style={styles.subtitle}><Text style={styles.subtitleText}>RATING</Text></View>\n        <MultiSelector\n          selectionMode={[1]}\n          optionlist={[\"1 Star\", \"2 Star\", \"3 Star\", \"4 Star\", \"5 Star\"]}\n          onSelectSwitch={() => { }}\n        />\n        <View style={styles.subtitle}><Text style={styles.subtitleText}>CATERGORY</Text></View>\n        <MultiSelector\n          selectionMode={[1]}\n          optionlist={[\"Restaurant\", \"Gym\", \"Library\", \"Shopping Center\", \"Hotel\", \"Museum\", \"Theater\", \"Station\", \"KTV\"]}\n          onSelectSwitch={() => { }}\n        />\n\n        <Text>DISTANCE</Text>\n        <Text>\"sliderbar\"</Text>\n        <Text>Hours</Text>\n        <Text>\"time-picker\"</Text>\n\n        <View style={styles.buttonWrapper}>\n          <TouchableOpacity onPress={multiSet}>\n            <View style={styles.button1}>\n              <Text style={styles.buttonText1}>RESET</Text>\n            </View>\n          </TouchableOpacity>\n          <TouchableOpacity onPress={multiSet}>\n            <View style={styles.button2}>\n              <Text style={styles.buttonText2}>CONFIRM</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </Accordion>\n      {/* </TouchableOpacity> */}\n\n      {/* {this.props.tab == 1 && */}\n      <Animated.FlatList\n        scrollEventThrottle={16}\n        onScroll={Animated.event([\n          {\n            nativeEvent: { contentOffset: { y: scrollY } }\n          }\n        ])}\n\n        style={{ top: -35 }}\n        showsVerticalScrollIndicator={false}\n        data={props.tab == 1 && props.categories}\n        keyExtractor={(item, index) => index} //should be item.id\n        renderItem={({ item }) => {\n          return (\n            <TouchableOpacity onPress={() => { props.navigation.navigate('List', { id: 4, venue_name: item.name, venue_desciption: item.description }) }}>\n              <View style={[styles.card]}>\n                <Image source={require('../../../assets/images/test.png')} style={styles.image} />\n                <View style={[styles.cardText]}>\n                  <View style={styles.titleWrapper}>\n                    <Text style={styles.title}>{item.name}</Text>\n                    <StarRating style={styles.starRating} ratings={3} reviews={79} />\n                  </View>\n                  <View style={[styles.textWrapper]}>\n                    <Feather name=\"map-pin\" size={13} color={'gray'} />\n                    <Text style={styles.text}>  2.2 km</Text>\n                    <Text style={styles.text}>  |  </Text>\n                    <Feather name=\"calendar\" size={13} color={'gray'} />\n                    <Text style={styles.text}>  5am - 10pm</Text>\n                  </View>\n                  <View style={[styles.textWrapper]}>\n                    <Feather name=\"list\" size={13} color={'gray'} />\n                    <Text style={styles.text}>  Restaurant, Bar</Text>\n                  </View>\n                  <View style={styles.detailWrapper}>\n                    <View style={styles.detail}><Text style={styles.info}>   # OF VISIT: 25   </Text></View>\n                    <View style={styles.detail}><Text style={styles.info}>   # OF CASES: 0   </Text></View>\n                  </View>\n                </View>\n              </View>\n            </TouchableOpacity>\n          )\n        }}\n      />\n      {/* } */}\n    </SafeAreaView>\n  )\n}\n\n\nconst renderBanner = ({ item, index }) => {\n  return <BannerSlider data={item} />\n}"
		]
	},
	"metadata": {},
	"sourceType": "module"
}
