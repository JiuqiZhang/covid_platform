{
	"ast": null,
	"code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsonify } from \"react-native-web/dist/index\";\nimport { Card, TextInput, Button, FAB } from \"react-native-paper\";\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\nimport baseUrl from \"../../assets/constants/BaseUrl\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nApp = function App(props) {\n  useEffect(function () {\n    props.getVenuesInfo();\n  });\n\n  var clickedItem = function clickedItem(data) {\n    props.navigation.navigate('Details', {\n      data: data\n    });\n  };\n\n  var renderData = function renderData(item) {\n    return _jsxs(Card, {\n      style: styles.card,\n      children: [_jsx(Text, {\n        style: styles.title,\n        onPress: function onPress() {\n          return clickedItem(item);\n        },\n        children: item.item.name\n      }), _jsx(Text, {\n        children: item.item.description\n      }), _jsx(Text, {\n        children: props.venues.venues.length\n      })]\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlatList, {\n      data: props.venues.venues,\n      renderItem: function renderItem(data) {\n        return renderData(data);\n      },\n      keyExtractor: function keyExtractor(data) {\n        return \"\" + data.id;\n      }\n    }), _jsx(FAB, {\n      style: styles.fab,\n      small: false,\n      icon: \"plus\",\n      theme: {\n        colors: {\n          accent: \"green\"\n        }\n      },\n      onPress: function onPress() {\n        return props.navigation.navigate('Create');\n      }\n    })]\n  });\n};\n\nvar getSetState = function getSetState(data) {\n  return {\n    type: 'SET_STATE',\n    venues: data.data\n  };\n};\n\nvar getVenueInfo = function getVenueInfo() {\n  return function _callee(dispatch) {\n    var res, action;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(baseUrl + \"/venue/get\"));\n\n          case 2:\n            res = _context.sent;\n\n            if (res) {\n              action = getSetState(res);\n              dispatch(action);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar mapState = function mapState(state) {\n  return {\n    venues: state.report\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    getVenuesInfo: function getVenuesInfo() {\n      dispatch(getVenueInfo());\n    },\n    setState: function setState(res) {\n      var action = getSetState(res);\n      dispatch(action);\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(App);\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flex: 1\n  },\n  card: {\n    flex: 1,\n    margin: 10,\n    padding: 20\n  },\n  title: {\n    fontSize: 17\n  },\n  fab: {\n    position: \"absolute\",\n    margin: 16,\n    right: 0,\n    bottom: 100\n  },\n  input1: {\n    padding: 10,\n    marginLeft: 20,\n    marginRight: 20,\n    marginTop: 10,\n    height: 30\n  },\n  input2: {\n    padding: 10,\n    marginLeft: 20,\n    marginRight: 20,\n    marginTop: 10,\n    height: 60\n  }\n});",
	"map": {
		"version": 3,
		"sources": [
			"/Users/llh/Documents/map/frontend/screens/report-staff-trial/View.js"
		],
		"names": [
			"React",
			"useEffect",
			"jsonify",
			"Card",
			"TextInput",
			"Button",
			"FAB",
			"connect",
			"axios",
			"baseUrl",
			"App",
			"props",
			"getVenuesInfo",
			"clickedItem",
			"data",
			"navigation",
			"navigate",
			"renderData",
			"item",
			"styles",
			"card",
			"title",
			"name",
			"description",
			"venues",
			"length",
			"container",
			"id",
			"fab",
			"colors",
			"accent",
			"getSetState",
			"type",
			"getVenueInfo",
			"dispatch",
			"get",
			"res",
			"action",
			"mapState",
			"state",
			"report",
			"mapDispatch",
			"setState",
			"StyleSheet",
			"create",
			"display",
			"flex",
			"margin",
			"padding",
			"fontSize",
			"position",
			"right",
			"bottom",
			"input1",
			"marginLeft",
			"marginRight",
			"marginTop",
			"height",
			"input2"
		],
		"mappings": "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",
		"sourcesContent": [
			"import React, { useEffect } from \"react\";\nimport { Image, StyleSheet, Text, View, FlatList, jsonify } from \"react-native\";\nimport { Card, TextInput, Button, FAB } from \"react-native-paper\";\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\nimport baseUrl from '../../assets/constants/BaseUrl'\n\nApp = (props) => {\n\tuseEffect(() => {\n\t\tprops.getVenuesInfo();\n\t});\n\n\tconst clickedItem = (data) => {\n\t\tprops.navigation.navigate('Details', { data: data });\n\t}\n\n\tconst renderData = (item) => {\n\t\treturn (\n\t\t\t<Card style={styles.card}>\t\t\t\n\t\t\t\t<Text style={styles.title} onPress={() => clickedItem(item)}>{item.item.name}</Text>\n\t\t\t\t<Text>{item.item.description}</Text>\n\t\t\t\t<Text>{props.venues.venues.length}</Text>\n\t\t\t</Card>\n\t\t)\n\t}\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<FlatList\n\t\t\t\tdata={props.venues.venues}\n\t\t\t\trenderItem={(data) => { return renderData(data) }}\n\t\t\t\tkeyExtractor={data => `${data.id}`}\n\t\t\t/>\n\n\t\t\t<FAB\n\t\t\t\tstyle={styles.fab}\n\t\t\t\tsmall={false}\n\t\t\t\ticon=\"plus\"\n\t\t\t\ttheme={{ colors: { accent: \"green\" } }}\n\t\t\t\tonPress={() => props.navigation.navigate('Create')}\n\t\t\t/>\n\t\t</View>\n\t)\n}\n\nconst getSetState = (data) => {\n\treturn {\n\t\ttype: 'SET_STATE',\n\t\tvenues: data.data\n\t}\n};\n\nconst getVenueInfo = () => async dispatch => {\n\tconst res = await axios.get(`${baseUrl}/venue/get`)\n\tif (res) {\n\t\tconst action = getSetState(res)\n\t\tdispatch(action)\n\t}\n};\n\nconst mapState = (state) => {\n\treturn {\n\t\tvenues: state.report\n\t}\n}\n\nconst mapDispatch = (dispatch) => {\n\treturn {\n\t\tgetVenuesInfo() {\n\t\t\tdispatch(getVenueInfo())\n\t\t},\n\t\tsetState(res) {\n\t\t\tconst action = getSetState(res)\n\t\t\tdispatch(action)\n\t\t},\n\t}\n}\n\nexport default connect(mapState, mapDispatch)(App)\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflex: 1\n\t},\n\tcard: {\n\t\tflex: 1,\n\t\tmargin: 10,\n\t\tpadding: 20,\n\t},\n\ttitle: {\n\t\tfontSize: 17\n\t},\n\tfab: {\n\t\tposition: \"absolute\",\n\t\tmargin: 16,\n\t\tright: 0,\n\t\tbottom: 100\n\t},\n\tinput1: {\n\t\tpadding: 10,\n\t\tmarginLeft: 20,\n\t\tmarginRight: 20,\n\t\tmarginTop: 10,\n\t\theight: 30\n\t},\n\tinput2: {\n\t\tpadding: 10,\n\t\tmarginLeft: 20,\n\t\tmarginRight: 20,\n\t\tmarginTop: 10,\n\t\theight: 60\n\t}\n});"
		]
	},
	"metadata": {},
	"sourceType": "module"
}
