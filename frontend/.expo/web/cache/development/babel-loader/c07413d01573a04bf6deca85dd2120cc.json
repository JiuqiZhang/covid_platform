{
	"ast": null,
	"code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Fontisto } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SingleCheckbox(_ref) {\n  var selectionMode = _ref.selectionMode,\n      optionlist = _ref.optionlist,\n      onSelectSwitch = _ref.onSelectSwitch;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      getSelectionMode = _useState2[0],\n      setSelectionMode = _useState2[1];\n\n  var updateSwitchData = function updateSwitchData(value) {\n    setSelectionMode(value);\n    onSelectSwitch(value);\n  };\n\n  return _jsx(View, {\n    style: [styles.listWrapper],\n    children: optionlist.map(function (category, index) {\n      return _jsxs(TouchableOpacity, {\n        activeOpacity: 1,\n        onPress: function onPress() {\n          return updateSwitchData(index + 1);\n        },\n        style: {\n          flexDirection: 'row',\n          borderRadius: 5,\n          margin: 5,\n          paddingHorizontal: 5,\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          height: 30\n        },\n        children: [_jsxs(View, {\n          style: styles.box,\n          children: [getSelectionMode === index + 1 && _jsx(Fontisto, {\n            name: 'radio-btn-active',\n            size: 15\n          }), getSelectionMode !== index + 1 && _jsx(Fontisto, {\n            name: 'radio-btn-passive',\n            size: 15\n          })]\n        }), _jsx(Text, {\n          style: [styles.listText],\n          children: category\n        })]\n      }, index);\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  listWrapper: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    width: '100%',\n    borderRadius: 7,\n    borderColor: '#ad40af'\n  },\n  box: {\n    marginRight: 5\n  },\n  listText: {\n    fontSize: 14,\n    color: 'black'\n  }\n});",
	"map": {
		"version": 3,
		"sources": [
			"/Users/llh/Documents/map/frontend/components/SingleCheckbox/index.js"
		],
		"names": [
			"React",
			"useState",
			"Fontisto",
			"SingleCheckbox",
			"selectionMode",
			"optionlist",
			"onSelectSwitch",
			"getSelectionMode",
			"setSelectionMode",
			"updateSwitchData",
			"value",
			"styles",
			"listWrapper",
			"map",
			"category",
			"index",
			"flexDirection",
			"borderRadius",
			"margin",
			"paddingHorizontal",
			"justifyContent",
			"alignItems",
			"height",
			"box",
			"listText",
			"StyleSheet",
			"create",
			"flexWrap",
			"width",
			"borderColor",
			"marginRight",
			"fontSize",
			"color"
		],
		"mappings": ";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,QAAT;;;AAEA,eAAe,SAASC,cAAT,OACgB;AAAA,MADUC,aACV,QADUA,aACV;AAAA,MAA9BC,UAA8B,QAA9BA,UAA8B;AAAA,MAAlBC,cAAkB,QAAlBA,cAAkB;;AAC9B,kBAA6CL,QAAQ,CAAC,EAAD,CAArD;AAAA;AAAA,MAAOM,gBAAP;AAAA,MAAyBC,gBAAzB;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AACnCF,IAAAA,gBAAgB,CAACE,KAAD,CAAhB;AACAJ,IAAAA,cAAc,CAACI,KAAD,CAAd;AACA,GAHD;;AAOA,SACC,KAAC,IAAD;AACC,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,WAAR,CADR;AAAA,cAGEP,UAAU,CAACQ,GAAX,CAAe,UAACC,QAAD,EAAWC,KAAX;AAAA,aACf,MAAC,gBAAD;AAEC,QAAA,aAAa,EAAE,CAFhB;AAGC,QAAA,OAAO,EAAE;AAAA,iBAAMN,gBAAgB,CAACM,KAAK,GAAG,CAAT,CAAtB;AAAA,SAHV;AAIC,QAAA,KAAK,EAAE;AAENC,UAAAA,aAAa,EAAE,KAFT;AAINC,UAAAA,YAAY,EAAE,CAJR;AAKNC,UAAAA,MAAM,EAAE,CALF;AAMNC,UAAAA,iBAAiB,EAAE,CANb;AAONC,UAAAA,cAAc,EAAE,eAPV;AAQNC,UAAAA,UAAU,EAAE,QARN;AASNC,UAAAA,MAAM,EAAE;AATF,SAJR;AAAA,mBAgBC,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEX,MAAM,CAACY,GAApB;AAAA,qBACEhB,gBAAgB,KAAKQ,KAAK,GAAG,CAA7B,IACA,KAAC,QAAD;AAAU,YAAA,IAAI,EAAE,kBAAhB;AAAoC,YAAA,IAAI,EAAE;AAA1C,YAFF,EAIER,gBAAgB,KAAKQ,KAAK,GAAG,CAA7B,IACA,KAAC,QAAD;AAAU,YAAA,IAAI,EAAE,mBAAhB;AAAqC,YAAA,IAAI,EAAE;AAA3C,YALF;AAAA,UAhBD,EAyBC,KAAC,IAAD;AACC,UAAA,KAAK,EAAE,CAACJ,MAAM,CAACa,QAAR,CADR;AAAA,oBAGEV;AAHF,UAzBD;AAAA,SACMC,KADN,CADe;AAAA,KAAf;AAHF,IADD;AAuCA;AAED,IAAMJ,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAChCd,EAAAA,WAAW,EAAE;AACZI,IAAAA,aAAa,EAAE,KADH;AAEZW,IAAAA,QAAQ,EAAE,MAFE;AAGZP,IAAAA,cAAc,EAAE,cAHJ;AAMZQ,IAAAA,KAAK,EAAE,MANK;AASZX,IAAAA,YAAY,EAAE,CATF;AASKY,IAAAA,WAAW,EAAE;AATlB,GADmB;AAYhCN,EAAAA,GAAG,EAAE;AACJO,IAAAA,WAAW,EAAE;AADT,GAZ2B;AAehCN,EAAAA,QAAQ,EAAE;AACTO,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,KAAK,EAAE;AAFE;AAfsB,CAAlB,CAAf",
		"sourcesContent": [
			"import React, { useState } from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity } from 'react-native';\nimport { Fontisto } from 'react-native-vector-icons';\n\nexport default function SingleCheckbox({ selectionMode,\n\toptionlist, onSelectSwitch }) {\n\tconst [getSelectionMode, setSelectionMode] = useState('');\n\n\tconst updateSwitchData = (value) => {\n\t\tsetSelectionMode(value);\n\t\tonSelectSwitch(value);\n\t}\n\n\t// console.log(getSelectionMode)\n\n\treturn (\n\t\t<View\n\t\t\tstyle={[styles.listWrapper]}\n\t\t>\n\t\t\t{optionlist.map((category, index) => (\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tkey={index}\n\t\t\t\t\tactiveOpacity={1}\n\t\t\t\t\tonPress={() => updateSwitchData(index + 1)}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t// flex: 1,\n\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t// backgroundColor: getSelectionMode.includes(index + 1) ? 'orange' : '#f1f1f1',\n\t\t\t\t\t\tborderRadius: 5,\n\t\t\t\t\t\tmargin: 5,\n\t\t\t\t\t\tpaddingHorizontal: 5,\n\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\theight: 30,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<View style={styles.box}>\n\t\t\t\t\t\t{getSelectionMode === index + 1 &&\n\t\t\t\t\t\t\t<Fontisto name={'radio-btn-active'} size={15} />\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{getSelectionMode !== index + 1 &&\n\t\t\t\t\t\t\t<Fontisto name={'radio-btn-passive'} size={15} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={[styles.listText]}\n\t\t\t\t\t>\n\t\t\t\t\t\t{category}</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t))\n\t\t\t}\n\t\t</View>\n\t)\n}\n\nconst styles = StyleSheet.create({\n\tlistWrapper: {\n\t\tflexDirection: 'row',\n\t\tflexWrap: 'wrap',\n\t\tjustifyContent: 'space-around',\n\t\t// alignItems: 'center',\n\t\t// height: '100%',\n\t\twidth: '100%',\n\n\t\t// backgroundColor: 'white',\n\t\tborderRadius: 7, borderColor: '#ad40af'\n\t},\n\tbox: {\n\t\tmarginRight: 5,\n\t},\n\tlistText: {\n\t\tfontSize: 14,\n\t\tcolor: 'black',\n\t},\n})"
		]
	},
	"metadata": {},
	"sourceType": "module"
}
